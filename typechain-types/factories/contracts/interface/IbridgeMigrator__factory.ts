/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IbridgeMigrator,
  IbridgeMigratorInterface,
} from "../../../contracts/interface/IbridgeMigrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
    ],
    name: "isDirectSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "foriegnAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ownedRail",
        type: "bool",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collectedFees",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "directSwap",
        type: "bool",
      },
      {
        internalType: "address",
        name: "wrappedAddress",
        type: "address",
      },
    ],
    name: "registerForiegnMigration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "limits",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "collectedFees",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ownedRail",
        type: "bool",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeRemitance",
        type: "address",
      },
      {
        internalType: "uint256[3]",
        name: "balances",
        type: "uint256[3]",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "supportedChains",
        type: "uint256[]",
      },
    ],
    name: "registerNativeMigration",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IbridgeMigrator__factory {
  static readonly abi = _abi;
  static createInterface(): IbridgeMigratorInterface {
    return new utils.Interface(_abi) as IbridgeMigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IbridgeMigrator {
    return new Contract(address, _abi, signerOrProvider) as IbridgeMigrator;
  }
}
