/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LERC20,
  LERC20Interface,
} from "../../../../contracts/interface/ILERC20deployer.sol/LERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recoveryAdmin_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timelockPeriod_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lossless_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LosslessOff",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LosslessOn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_turnOffDate",
        type: "uint256",
      },
    ],
    name: "LosslessTurnOffProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_newAdmin",
        type: "address",
      },
    ],
    name: "NewRecoveryAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_candidate",
        type: "address",
      },
    ],
    name: "NewRecoveryAdminProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "acceptRecoveryAdminOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeLosslessTurnOff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executeLosslessTurnOn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isLosslessOn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lossless",
    outputs: [
      {
        internalType: "contract ILssController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "losslessTurnOffTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeLosslessTurnOff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setLosslessAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "from",
        type: "address[]",
      },
    ],
    name: "transferOutBlacklistedFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    name: "transferRecoveryAdminOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600c805460ff191660011790553480156200001e57600080fd5b5060405162001d8038038062001d80833981016040819052620000419162000382565b6200004c33620000f4565b62000058338862000144565b85516200006d9060049060208901906200020c565b508451620000839060059060208801906200020c565b50600980546001600160a01b039586166001600160a01b03199182161790915560068054948616948216949094179093556007805490931690925560006008819055600a91909155600b55600c80549190921661010002610100600160a81b031990911617905550620004ad915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166200019f5760405162461bcd60e51b815260206004820181905260248201527f4c45524332303a206d696e7420746f20746865207a65726f2061646472657373604482015260640160405180910390fd5b8060036000828254620001b3919062000435565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200021a906200045a565b90600052602060002090601f0160209004810192826200023e576000855562000289565b82601f106200025957805160ff191683800117855562000289565b8280016001018555821562000289579182015b82811115620002895782518255916020019190600101906200026c565b50620002979291506200029b565b5090565b5b808211156200029757600081556001016200029c565b80516001600160a01b0381168114620002ca57600080fd5b919050565b600082601f830112620002e0578081fd5b81516001600160401b0380821115620002fd57620002fd62000497565b604051601f8301601f19908116603f0116810190828211818310171562000328576200032862000497565b8160405283815260209250868385880101111562000344578485fd5b8491505b8382101562000367578582018301518183018401529082019062000348565b838211156200037857848385830101525b9695505050505050565b600080600080600080600060e0888a0312156200039d578283fd5b875160208901519097506001600160401b0380821115620003bc578485fd5b620003ca8b838c01620002cf565b975060408a0151915080821115620003e0578485fd5b50620003ef8a828b01620002cf565b9550506200040060608901620002b2565b93506200041060808901620002b2565b925060a088015191506200042760c08901620002b2565b905092959891949750929550565b600082198211156200045557634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200046f57607f821691505b602082108114156200049157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6118c380620004bd6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a9059cbb116100a2578063d6e242b811610071578063d6e242b8146103b8578063dd62ed3e146103c0578063f2fde38b146103f9578063f851a4401461040c576101da565b8063a9059cbb1461037d578063b38fe95714610390578063b5c2287714610398578063ccfa214f146103ab576101da565b806393310ffe116100de57806393310ffe1461033c578063936af9111461034f57806395d89b4114610362578063a457c2d71461036a576101da565b806370a0823114610310578063715018a6146103235780638da5cb5b1461032b576101da565b806334f6ebf51161017c5780635b8a194a1161014b5780635b8a194a146102db5780635f6529a3146102e357806361086b00146102f65780636e9960c3146102ff576101da565b806334f6ebf51461027257806339509351146102a257806340c10f19146102b557806342966c68146102c8576101da565b806323b872dd116101b857806323b872dd146102325780632baa3c9e146102455780632ecaf6751461025a578063313ce56714610263576101da565b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e761041f565b6040516101f49190611732565b60405180910390f35b61021061020b3660046115b4565b6104b1565b60405190151581526020016101f4565b6003545b6040519081526020016101f4565b610210610240366004611579565b610549565b610258610253366004611526565b6106a3565b005b610224600a5481565b604051601281526020016101f4565b600c5461028a9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b6102106102b03660046115b4565b61078a565b6102586102c33660046115b4565b610842565b6102586102d63660046116f6565b610858565b61025861086d565b60065461028a906001600160a01b031681565b610224600b5481565b6009546001600160a01b031661028a565b61022461031e366004611526565b610930565b61025861094f565b6000546001600160a01b031661028a565b61025861034a3660046115b4565b610963565b61025861035d3660046115dd565b6109e6565b6101e7610b4e565b6102106103783660046115b4565b610b5d565b61021061038b3660046115b4565b610c7d565b610258610d0a565b6102586103a636600461164c565b610e18565b600c546102109060ff1681565b610258610f28565b6102246103ce366004611547565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610258610407366004611526565b611044565b60095461028a906001600160a01b031681565b60606004805461042e906117eb565b80601f016020809104026020016040519081016040528092919081815260200182805461045a906117eb565b80156104a75780601f1061047c576101008083540402835291602001916104a7565b820191906000526020600020905b81548152906001019060200180831161048a57829003601f168201915b5050505050905090565b600c546000908390839060ff161561053357600c5461010090046001600160a01b03166347abf3be6104e03390565b84846040518463ffffffff1660e01b81526004016105009392919061170e565b600060405180830381600087803b15801561051a57600080fd5b505af115801561052e573d6000803e3d6000fd5b505050505b61053e3386866110ba565b506001949350505050565b600c5460009084908490849060ff16156105eb57600c5461010090046001600160a01b031663379f5c6961057a3390565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201528187166024820152908516604482015260648101849052608401600060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b505050505b6001600160a01b0387166000908152600260209081526040808320338452909152902054858110156106765760405162461bcd60e51b815260206004820152602960248201527f4c45524332303a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084015b60405180910390fd5b61068188888861111c565b610695883361069089856117d4565b6110ba565b506001979650505050505050565b6006546001600160a01b0316336001600160a01b0316146106d65760405162461bcd60e51b815260040161066d90611785565b6009546001600160a01b03828116911614156107345760405162461bcd60e51b815260206004820152601f60248201527f4c45524332303a2043616e6e6f74207365742073616d65206164647265737300604482015260640161066d565b6040516001600160a01b038216907f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c90600090a2600980546001600160a01b0319166001600160a01b0392909216919091179055565b600c546000908390839060ff161561080c57600c5461010090046001600160a01b031663cf5961bb6107b93390565b84846040518463ffffffff1660e01b81526004016107d99392919061170e565b600060405180830381600087803b1580156107f357600080fd5b505af1158015610807573d6000803e3d6000fd5b505050505b3360008181526002602090815260408083206001600160a01b038a16845290915290205461053e919087906106909088906117bc565b61084a611282565b61085482826112dc565b5050565b610860611282565b61086a338261138b565b50565b6006546001600160a01b0316336001600160a01b0316146108a05760405162461bcd60e51b815260040161066d90611785565b600c5460ff16156108f35760405162461bcd60e51b815260206004820152601b60248201527f4c45524332303a204c6f73736c65737320616c7265616479206f6e0000000000604482015260640161066d565b6000600b819055600c805460ff191660011790556040517f1ba3b66404043da8297d0b876fa6464f2cb127edfc6626308046d4503028322b9190a1565b6001600160a01b0381166000908152600160205260409020545b919050565b610957611282565b61096160006114bf565b565b6006546001600160a01b0316336001600160a01b0316146109965760405162461bcd60e51b815260040161066d90611785565b600780546001600160a01b0319166001600160a01b03841690811790915560088290556040517f6c591da8da2f6e69746d7d9ae61c27ee29fbe303798141b4942ae2aef54274b190600090a25050565b600c5461010090046001600160a01b03166109fe3390565b6001600160a01b031614610a545760405162461bcd60e51b815260206004820152601e60248201527f4c45524332303a204f6e6c79206c6f73736c65737320636f6e74726163740000604482015260640161066d565b806000805b82811015610b13576000858583818110610a8357634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610a989190611526565b6001600160a01b03811660009081526001602052604081208054919055909150610ac281856117bc565b600c546040518381529195506001600160a01b036101009091048116919084169060008051602061186e8339815191529060200160405180910390a350508080610b0b90611826565b915050610a59565b50600c5461010090046001600160a01b031660009081526001602052604081208054839290610b439084906117bc565b909155505050505050565b60606005805461042e906117eb565b600c546000908390839060ff1615610bdf57600c5461010090046001600160a01b031663568c75a9610b8c3390565b84846040518463ffffffff1660e01b8152600401610bac9392919061170e565b600060405180830381600087803b158015610bc657600080fd5b505af1158015610bda573d6000803e3d6000fd5b505050505b3360009081526002602090815260408083206001600160a01b038916845290915290205484811015610c625760405162461bcd60e51b815260206004820152602660248201527f4c45524332303a2064656372656173656420616c6c6f77616e63652062656c6f60448201526577207a65726f60d01b606482015260840161066d565b610c71338761069088856117d4565b50600195945050505050565b600c546000908390839060ff1615610cff57600c5461010090046001600160a01b0316631ffb811f610cac3390565b84846040518463ffffffff1660e01b8152600401610ccc9392919061170e565b600060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b505050505b61053e33868661111c565b6006546001600160a01b0316336001600160a01b031614610d3d5760405162461bcd60e51b815260040161066d90611785565b600b54610d8c5760405162461bcd60e51b815260206004820152601c60248201527f4c45524332303a205475726e4f6666206e6f742070726f706f73656400000000604482015260640161066d565b42600b541115610dde5760405162461bcd60e51b815260206004820152601d60248201527f4c45524332303a2054696d65206c6f636b20696e2070726f6772657373000000604482015260640161066d565b600c805460ff191690556000600b8190556040517f3eb72350c9c7928d31e9ab450bfff2c159434aa4b82658a7d8eae7f109cb4e7b9190a1565b6007546001600160a01b0316336001600160a01b031614610e7b5760405162461bcd60e51b815260206004820152601960248201527f4c45524332303a204d7573742062652063616e64697461746500000000000000604482015260640161066d565b6008548151602083012014610ec85760405162461bcd60e51b81526020600482015260136024820152724c45524332303a20496e76616c6964206b657960681b604482015260640161066d565b6007546040516001600160a01b03909116907fb94bba6936ec7f75ee931dadf6e1a4d66b43d09b6fa0178fb13df9b77fb5841f90600090a25060078054600680546001600160a01b03199081166001600160a01b03841617909155169055565b6006546001600160a01b0316336001600160a01b031614610f5b5760405162461bcd60e51b815260040161066d90611785565b600b5415610fab5760405162461bcd60e51b815260206004820181905260248201527f4c45524332303a205475726e4f666620616c72656164792070726f706f736564604482015260640161066d565b600c5460ff16610ffd5760405162461bcd60e51b815260206004820152601c60248201527f4c45524332303a204c6f73736c65737320616c7265616479206f666600000000604482015260640161066d565b600a5461100a90426117bc565b600b8190556040519081527f6ca688e6e3ddd707280140b2bf0106afe883689b6c74e68cbd517576dd9c245a9060200160405180910390a1565b61104c611282565b6001600160a01b0381166110b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066d565b61086a816114bf565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166111815760405162461bcd60e51b815260206004820152602660248201527f4c45524332303a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b606482015260840161066d565b6001600160a01b038316600090815260016020526040902054818110156111fa5760405162461bcd60e51b815260206004820152602760248201527f4c45524332303a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b606482015260840161066d565b61120482826117d4565b6001600160a01b03808616600090815260016020526040808220939093559085168152908120805484929061123a9084906117bc565b92505081905550826001600160a01b0316846001600160a01b031660008051602061186e8339815191528460405161127491815260200190565b60405180910390a350505050565b6000546001600160a01b031633146109615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066d565b6001600160a01b0382166113325760405162461bcd60e51b815260206004820181905260248201527f4c45524332303a206d696e7420746f20746865207a65726f2061646472657373604482015260640161066d565b806003600082825461134491906117bc565b90915550506001600160a01b03821660008181526001602090815260408083208054860190555184815260008051602061186e833981519152910160405180910390a35050565b6001600160a01b0382166113eb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161066d565b6001600160a01b0382166000908152600160205260409020548181101561145f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161066d565b6001600160a01b038316600090815260016020526040812083830390556003805484929061148e9084906117d4565b90915550506040518281526000906001600160a01b0385169060008051602061186e8339815191529060200161110f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461094a57600080fd5b600060208284031215611537578081fd5b6115408261150f565b9392505050565b60008060408385031215611559578081fd5b6115628361150f565b91506115706020840161150f565b90509250929050565b60008060006060848603121561158d578081fd5b6115968461150f565b92506115a46020850161150f565b9150604084013590509250925092565b600080604083850312156115c6578182fd5b6115cf8361150f565b946020939093013593505050565b600080602083850312156115ef578182fd5b823567ffffffffffffffff80821115611606578384fd5b818501915085601f830112611619578384fd5b813581811115611627578485fd5b866020808302850101111561163a578485fd5b60209290920196919550909350505050565b60006020828403121561165d578081fd5b813567ffffffffffffffff80821115611674578283fd5b818401915084601f830112611687578283fd5b81358181111561169957611699611857565b604051601f8201601f19908116603f011681019083821181831017156116c1576116c1611857565b816040528281528760208487010111156116d9578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611707578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080835283518082850152825b8181101561175e57858101830151858201604001528201611742565b8181111561176f5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601e908201527f4c45524332303a204d757374206265207265636f766572792061646d696e0000604082015260600190565b600082198211156117cf576117cf611841565b500190565b6000828210156117e6576117e6611841565b500390565b6002810460018216806117ff57607f821691505b6020821081141561182057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561183a5761183a611841565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205f0375c054f0de331c30e4a88195cccdc655f1c211c90004fe994533d5fef16064736f6c63430008020033";

type LERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LERC20__factory extends ContractFactory {
  constructor(...args: LERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    totalSupply_: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    recoveryAdmin_: PromiseOrValue<string>,
    timelockPeriod_: PromiseOrValue<BigNumberish>,
    lossless_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LERC20> {
    return super.deploy(
      totalSupply_,
      name_,
      symbol_,
      admin_,
      recoveryAdmin_,
      timelockPeriod_,
      lossless_,
      overrides || {}
    ) as Promise<LERC20>;
  }
  override getDeployTransaction(
    totalSupply_: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    recoveryAdmin_: PromiseOrValue<string>,
    timelockPeriod_: PromiseOrValue<BigNumberish>,
    lossless_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      totalSupply_,
      name_,
      symbol_,
      admin_,
      recoveryAdmin_,
      timelockPeriod_,
      lossless_,
      overrides || {}
    );
  }
  override attach(address: string): LERC20 {
    return super.attach(address) as LERC20;
  }
  override connect(signer: Signer): LERC20__factory {
    return super.connect(signer) as LERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LERC20Interface {
    return new utils.Interface(_abi) as LERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LERC20 {
    return new Contract(address, _abi, signerOrProvider) as LERC20;
  }
}
