/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AddressExemptionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AssetIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIncentive",
        type: "uint256",
      },
    ],
    name: "AssetIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "BrgHoldingIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingIncentive",
        type: "uint256",
      },
    ],
    name: "BrgHoldingIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingThreshold",
        type: "uint256",
      },
    ],
    name: "BrgHoldingThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultAssetIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultUserIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "UserIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentIncentive",
        type: "uint256",
      },
    ],
    name: "UserIncentiveUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exemptionStatus",
        type: "bool",
      },
    ],
    name: "userExemptStatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAddressExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAssetIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateBRDGHoldingIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateIndexedTokenIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "activateIndexedUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deActivateIndexedUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAssetIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultUserIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "determineTokenHolderLevelPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "exemptAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExempted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "updateBRDGHoldingIncentiveThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultAssetIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultUserIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateIndexedTokenIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateTokenHoldingIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateUserExemptionPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useAssetIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useBRDGHoldingIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useExemption",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useUserIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a600455600a6005553480156200001b57600080fd5b5060405162002b1d38038062002b1d8339810160408190526200003e91620001b9565b600080546001600160a01b039384166001600160a01b03199182161782556001805493909416921691909117825560408051808201825260038152690a968163f0a57b4000006020808301918252848052600680825292517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85590517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95582518084018452600781526a01a784379d99db42000000818301908152958552828252517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315593517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32558151808301909252600f82526a084595161401484a000000828501908152600290935290925290517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2955517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a5562000210565b60008060408385031215620001cc578182fd5b8251620001d981620001f7565b6020840151909250620001ec81620001f7565b809150509250929050565b6001600160a01b03811681146200020d57600080fd5b50565b6128fd80620002206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063a3019cf8116100de578063c548d9b711610097578063e06174e411610071578063e06174e41461032c578063f2b8040714610357578063f2dcc1eb1461036a578063f77c47911461037357610173565b8063c548d9b7146102f9578063c6521a0914610306578063cef8f6b01461031957610173565b8063a3019cf814610288578063aaddc3be1461029b578063b306760d146102ae578063b43b5ebc146102c0578063ba9527fe146102d3578063c0079605146102e657610173565b8063401912941161013057806340191294146102155780635ebbc33014610228578063632b73331461023b57806368efca891461024f57806394018c4a146102625780639b9d24551461027557610173565b806302a03d3614610178578063079eb7fb146101945780631f78d3e0146101c757806322193f91146101dc57806336a17d14146101ef5780633e8addf114610202575b600080fd5b61018160055481565b6040519081526020015b60405180910390f35b6101b76101a236600461260a565b60026020526000908152604090205460ff1681565b604051901515815260200161018b565b6101da6101d5366004612711565b610386565b005b6101da6101ea3660046126d9565b6107c0565b6101da6101fd3660046126d9565b61096c565b6101da61021036600461260a565b610b0a565b6101da6102233660046126ae565b610d07565b6101da610236366004612731565b610f07565b6003546101b7906301000000900460ff1681565b6101da61025d3660046126d9565b6110a7565b6101da610270366004612681565b61123b565b6101da6102833660046126d9565b611456565b6101da610296366004612681565b6115f1565b6101da6102a93660046126ae565b611772565b6003546101b790610100900460ff1681565b6003546101b79062010000900460ff1681565b6101816102e1366004612649565b611968565b6101da6102f4366004612731565b611bce565b6003546101b79060ff1681565b6101da610314366004612711565b611d6e565b61018161032736600461260a565b61217f565b60015461033f906001600160a01b031681565b6040516001600160a01b03909116815260200161018b565b6101da61036536600461260a565b6123a3565b61018160045481565b60005461033f906001600160a01b031681565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156103ca57600080fd5b505afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610402919061262d565b6001600160a01b0316148061048d5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561045557600080fd5b505afa158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906126f5565b6104b25760405162461bcd60e51b81526004016104a990612761565b60405180910390fd5b60006104bd83612579565b90506000600660008360028111156104e557634e487b7160e01b600052602160045260246000fd5b600281111561050457634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020549050600282600281111561053957634e487b7160e01b600052602160045260246000fd5b14156105ef576001600052600660205260008051602061286883398151915254831180156105a0575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854600160005260008051602061286883398151915254115b80156105e157506000600681805b60028111156105cd57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154115b6105ea57600080fd5b610729565b600182600281111561061157634e487b7160e01b600052602160045260246000fd5b141561068b57600260005260066020527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2954831080156105a057506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854831180156105e157506000600681806105ae565b60008260028111156106ad57634e487b7160e01b600052602160045260246000fd5b14156107295760066020526000805160206128688339815191525460026000527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace29541180156107145750600160005260066020526000805160206128688339815191525483105b80156107205750600083115b61072957600080fd5b826006600086600281111561074e57634e487b7160e01b600052602160045260246000fd5b600281111561076d57634e487b7160e01b600052602160045260246000fd5b815260208082019290925260409081016000209290925581518381529081018590527f240772d6994e765d6a8e5bdf73ae5fff4eb4de779e7ae3b36ae4f458f590b552910160405180910390a150505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561080457600080fd5b505afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c919061262d565b6001600160a01b031614806108c75750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561088f57600080fd5b505afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c791906126f5565b6108e35760405162461bcd60e51b81526004016104a990612761565b60035460ff630100000090910416151581151514156109145760405162461bcd60e51b81526004016104a990612798565b6003805482151563010000000263ff000000199091161790556040517fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99061096190831515815260200190565b60405180910390a150565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156109b057600080fd5b505afa1580156109c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e8919061262d565b6001600160a01b03161480610a735750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610a3b57600080fd5b505afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7391906126f5565b610a8f5760405162461bcd60e51b81526004016104a990612761565b60035460ff620100009091041615158115151415610abf5760405162461bcd60e51b81526004016104a990612798565b60038054821515620100000262ff0000199091161790556040517f91165ce3ea12d2f38c117706dca0cfdeefca89338a64dff731ab3c30a7b890e39061096190831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610b4e57600080fd5b505afa158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b86919061262d565b6001600160a01b03161480610c115750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610bd957600080fd5b505afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1191906126f5565b610c2d5760405162461bcd60e51b81526004016104a990612761565b6001600160a01b03811660009081526008602052604090206001015460ff1615610c8a5760405162461bcd60e51b815260206004820152600e60248201526d616c72656164792061637469766560901b60448201526064016104a9565b6040805180820182526004548152600160208083018281526001600160a01b038616600081815260088452869020945185559051938301805460ff191694151594909417909355925190815290917f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa9891015b60405180910390a250565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610d4b57600080fd5b505afa158015610d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d83919061262d565b6001600160a01b03161480610e0e5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610dd657600080fd5b505afa158015610dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0e91906126f5565b610e2a5760405162461bcd60e51b81526004016104a990612761565b6001600160a01b03821660009081526007602052604090206001015460ff16610ea75760405162461bcd60e51b815260206004820152602960248201527f466565436f6e74726f6c6c65723a206173736574206578656d7074696f6e206e6044820152686f742061637469766560b81b60648201526084016104a9565b6001600160a01b038216600081815260076020908152604091829020805490859055825181815291820185905292917f2c4b2f302ea040ab407534b2d7cc4bc99334eb41a2b3f2c6f363fd0a1648f5d491015b60405180910390a2505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610f4b57600080fd5b505afa158015610f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f83919061262d565b6001600160a01b0316148061100e5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610fd657600080fd5b505afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e91906126f5565b61102a5760405162461bcd60e51b81526004016104a990612761565b603281106110665760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b60448201526064016104a9565b60045460408051918252602082018390527faee9027cd52cd36ed373913dcea55a98babe1ff97f4a046828a3b177ea49c305910160405180910390a1600455565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156110eb57600080fd5b505afa1580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611123919061262d565b6001600160a01b031614806111ae5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae91906126f5565b6111ca5760405162461bcd60e51b81526004016104a990612761565b60035460ff16151581151514156111f35760405162461bcd60e51b81526004016104a990612798565b60405181151581527fe41c88aff510062186556cad0aed9c7a0d4b346a62664358e69f4a40f43e9ca99060200160405180910390a16003805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561127f57600080fd5b505afa158015611293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b7919061262d565b6001600160a01b031614806113425750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134291906126f5565b61135e5760405162461bcd60e51b81526004016104a990612761565b6001600160a01b03821660009081526007602052604090206001015460ff16151581151514156113a05760405162461bcd60e51b81526004016104a990612798565b80156113d2576001600160a01b0382166000908152600760205260409020600101805460ff191682151517905561141e565b604080518082018252600554815282151560208083019182526001600160a01b03861660009081526007909152929092209051815590516001909101805460ff19169115159190911790555b604051600181527fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99060200160405180910390a15050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561149a57600080fd5b505afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d2919061262d565b6001600160a01b0316148061155d5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561152557600080fd5b505afa158015611539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155d91906126f5565b6115795760405162461bcd60e51b81526004016104a990612761565b60035460ff61010090910416151581151514156115a85760405162461bcd60e51b81526004016104a990612798565b600380548215156101000261ff00199091161790556040517f4b35d602e0cd107e255cddff136a82aa52d7e52cbeb0add60ad2044ea6b164919061096190831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561163557600080fd5b505afa158015611649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166d919061262d565b6001600160a01b0316146116c35760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016104a9565b6001600160a01b03821660009081526002602052604090205460ff16151581151514156117025760405162461bcd60e51b81526004016104a990612798565b816001600160a01b03167f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa988260405161173f911515815260200190565b60405180910390a26001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156117b657600080fd5b505afa1580156117ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ee919061262d565b6001600160a01b031614806118795750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561184157600080fd5b505afa158015611855573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187991906126f5565b6118955760405162461bcd60e51b81526004016104a990612761565b6001600160a01b03821660009081526008602052604090206001015460ff166119115760405162461bcd60e51b815260206004820152602860248201527f466565436f6e74726f6c6c65723a2075736572206578656d7074696f6e206e6f604482015267742061637469766560c01b60648201526084016104a9565b6001600160a01b038216600081815260086020908152604091829020805490859055825181815291820185905292917f8d27423b5b97272ddd630edf11c97bddbc21ef3df22e50023ce38cb00d7024469101610efa565b60015460408051633199692b60e11b815290516000926001600160a01b031691636332d256916004808301926020929190829003018186803b1580156119ad57600080fd5b505afa1580156119c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e591906126f5565b6119f157506000611bc8565b60015460408051638375bb3960e01b815290516000926001600160a01b031691638375bb39916004808301926020929190829003018186803b158015611a3657600080fd5b505afa158015611a4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6e9190612749565b60035490915060009060ff168015611a9e57506001600160a01b03851660009081526002602052604090205460ff165b15611aae57600092505050611bc8565b6003546301000000900460ff1615611b0a576001600160a01b03841660009081526007602052604090206001015460ff1615611b0a576001600160a01b038416600090815260076020526040902054611b0790826127bd565b90505b60035462010000900460ff1615611b65576001600160a01b03851660009081526008602052604090206001015460ff1615611b65576001600160a01b038516600090815260086020526040902054611b6290826127bd565b90505b600354610100900460ff1615611b90576000611b808661217f565b9050611b8c81836127bd565b9150505b60648110611ba357600092505050611bc8565b6064611baf83836127f5565b611bb991906127d5565b611bc39083612814565b925050505b92915050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611c1257600080fd5b505afa158015611c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4a919061262d565b6001600160a01b03161480611cd55750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611c9d57600080fd5b505afa158015611cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd591906126f5565b611cf15760405162461bcd60e51b81526004016104a990612761565b60328110611d2d5760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b60448201526064016104a9565b60055460408051918252602082018390527fb04bf79637ebb6d6a977766f7b02543d5d6607154feb1668c15e2c02c27ae047910160405180910390a1600555565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611db257600080fd5b505afa158015611dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dea919061262d565b6001600160a01b03161480611e755750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611e3d57600080fd5b505afa158015611e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7591906126f5565b611e915760405162461bcd60e51b81526004016104a990612761565b6000611e9c83612579565b90506002816002811115611ec057634e487b7160e01b600052602160045260246000fd5b1415611f7657600160005260066020526000805160206128a88339815191525482118015611f27575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95460016000526000805160206128a883398151915254115b8015611f6857506000600681805b6002811115611f5457634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060010154115b611f7157600080fd5b61208c565b6001816002811115611f9857634e487b7160e01b600052602160045260246000fd5b141561200057600260005260066020526000805160206128888339815191525482108015611f2757506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95482118015611f685750600060068180611f35565b600081600281111561202257634e487b7160e01b600052602160045260246000fd5b141561208c5760066020526000805160206128a8833981519152546002600052600080516020612888833981519152541180156120775750600160005260066020526000805160206128a88339815191525482105b80156120835750600082115b61208c57600080fd5b7f380370fc16cb5de7ba98c093cb2abe6e49cccb3e3f001e519ebcfe82f5cf139a600660008360028111156120d157634e487b7160e01b600052602160045260246000fd5b60028111156120f057634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020600101548360405161211a929190918252602082015260400190565b60405180910390a1816006600083600281111561214757634e487b7160e01b600052602160045260246000fd5b600281111561216657634e487b7160e01b600052602160045260246000fd5b8152602081019190915260400160002060010155505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316635d911d126040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d057600080fd5b505afa1580156121e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612208919061262d565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a082319060240160206040518083038186803b15801561224b57600080fd5b505afa15801561225f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122839190612749565b600260005260066020526000805160206128888339815191525490915081106122e6576006600060025b60028111156122cc57634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206000015491505061239e565b6002600052600660205260008051602061288883398151915254811080156123275750600160005260066020526000805160206128a8833981519152548110155b15612337576006600060016122ad565b600160005260066020526000805160206128a8833981519152548110801561238957506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548110155b156123985760066000806122ad565b60009150505b919050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156123e757600080fd5b505afa1580156123fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241f919061262d565b6001600160a01b031614806124aa5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561247257600080fd5b505afa158015612486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124aa91906126f5565b6124c65760405162461bcd60e51b81526004016104a990612761565b6001600160a01b03811660009081526008602052604090206001015460ff166125275760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e4819195858dd1a5d985d1959606a1b60448201526064016104a9565b6001600160a01b0381166000818152600860209081526040808320600101805460ff19169055519182527f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa989101610cfc565b60008082600281111561259c57634e487b7160e01b600052602160045260246000fd5b14156125aa5750600061239e565b60018260028111156125cc57634e487b7160e01b600052602160045260246000fd5b14156125da5750600161239e565b60028260028111156125fc57634e487b7160e01b600052602160045260246000fd5b14156101735750600261239e565b60006020828403121561261b578081fd5b813561262681612841565b9392505050565b60006020828403121561263e578081fd5b815161262681612841565b6000806040838503121561265b578081fd5b823561266681612841565b9150602083013561267681612841565b809150509250929050565b60008060408385031215612693578182fd5b823561269e81612841565b9150602083013561267681612859565b600080604083850312156126c0578182fd5b82356126cb81612841565b946020939093013593505050565b6000602082840312156126ea578081fd5b813561262681612859565b600060208284031215612706578081fd5b815161262681612859565b60008060408385031215612723578182fd5b8235600381106126cb578283fd5b600060208284031215612742578081fd5b5035919050565b60006020828403121561275a578081fd5b5051919050565b60208082526017908201527f63616c6c6572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b6020808252600b908201526a185b1c9958591e481cd95d60aa1b604082015260600190565b600082198211156127d0576127d061282b565b500190565b6000826127f057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561280f5761280f61282b565b500290565b6000828210156128265761282661282b565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461285657600080fd5b50565b801515811461285657600080fdfe3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a318819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32a264697066735822122024e560203ca6be4a5608de15762936b255b2f7cf9b021db3ef41a972efe2b96d64736f6c63430008020033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeController> {
    return super.deploy(
      _controller,
      _settings,
      overrides || {}
    ) as Promise<FeeController>;
  }
  override getDeployTransaction(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, _settings, overrides || {});
  }
  override attach(address: string): FeeController {
    return super.attach(address) as FeeController;
  }
  override connect(signer: Signer): FeeController__factory {
    return super.connect(signer) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new utils.Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeController {
    return new Contract(address, _abi, signerOrProvider) as FeeController;
  }
}
