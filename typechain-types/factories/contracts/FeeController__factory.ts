/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AddressExemptionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AssetIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIncentive",
        type: "uint256",
      },
    ],
    name: "AssetIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "BrgHoldingIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingIncentive",
        type: "uint256",
      },
    ],
    name: "BrgHoldingIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingThreshold",
        type: "uint256",
      },
    ],
    name: "BrgHoldingThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultAssetIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultUserIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "UserIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentIncentive",
        type: "uint256",
      },
    ],
    name: "UserIncentiveUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exemptionStatus",
        type: "bool",
      },
    ],
    name: "userExemptStatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAddressExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAssetIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateBRDGHoldingIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateIndexedTokenIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateIndexedUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAssetIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultUserIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "determineTokenHolderLevelPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "exemptAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getTotalIncentives",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexedTokenIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "incentivePercentage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexedUserIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "incentivePercentage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExempted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenHolderIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "incentivePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "updateBRDGHoldingIncentiveThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultAssetIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultUserIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateIndexedTokenIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateTokenHoldingIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateUserExemptionPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useAssetIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useBRDGHoldingIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useExemption",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useUserIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a600455600a6005553480156200001b57600080fd5b5060405162002b2538038062002b258339810160408190526200003e91620001b9565b600080546001600160a01b039384166001600160a01b03199182161782556001805493909416921691909117825560408051808201825260148152690a968163f0a57b4000006020808301918252848052600680825292517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85590517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95582518084018452601e81526a01a784379d99db42000000818301908152958552828252517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315593517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32558151808301909252603282526a084595161401484a000000828501908152600290935290925290517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2955517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a5562000210565b60008060408385031215620001cc578182fd5b8251620001d981620001f7565b6020840151909250620001ec81620001f7565b809150509250929050565b6001600160a01b03811681146200020d57600080fd5b50565b61290580620002206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80639fcb58bf116100f9578063c007960511610097578063cef8f6b011610071578063cef8f6b014610422578063e06174e414610435578063f2dcc1eb14610460578063f77c479114610469576101c4565b8063c0079605146103ef578063c548d9b714610402578063c6521a091461040f576101c4565b8063ae129183116100d3578063ae129183146103a4578063b306760d146103b7578063b43b5ebc146103c9578063ba9527fe146103dc576101c4565b80639fcb58bf14610354578063a3019cf81461037e578063aaddc3be14610391576101c4565b80635ebbc3301161016657806368a8d9f11161014057806368a8d9f1146102dc57806368efca891461031b57806394018c4a1461032e5780639b9d245514610341576101c4565b80635ebbc3301461027957806361491ac51461028c578063632b7333146102c8576101c4565b806322193f91116101a257806322193f911461022d57806334f1511d1461024057806336a17d14146102535780634019129414610266576101c4565b806302a03d36146101c9578063079eb7fb146101e55780631f78d3e014610218575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6102086101f33660046125fd565b60026020526000908152604090205460ff1681565b60405190151581526020016101dc565b61022b61022636600461271e565b61047c565b005b61022b61023b3660046126c5565b6108b6565b61022b61024e36600461266d565b610a62565b61022b6102613660046126c5565b610c47565b61022b61027436600461269a565b610de5565b61022b610287366004612739565b610fe5565b6102b361029a3660046126fd565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101dc565b600354610208906301000000900460ff1681565b6103066102ea3660046125fd565b6008602052600090815260409020805460019091015460ff1682565b604080519283529015156020830152016101dc565b61022b6103293660046126c5565b611185565b61022b61033c36600461266d565b611319565b61022b61034f3660046126c5565b611534565b6103066103623660046125fd565b6007602052600090815260409020805460019091015460ff1682565b61022b61038c36600461266d565b6116cf565b61022b61039f36600461269a565b611850565b6101d26103b2366004612635565b611a46565b60035461020890610100900460ff1681565b6003546102089062010000900460ff1681565b6101d26103ea366004612635565b611bf4565b61022b6103fd366004612739565b611d88565b6003546102089060ff1681565b61022b61041d36600461271e565b611f28565b6101d26104303660046125fd565b612339565b600154610448906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b6101d260045481565b600054610448906001600160a01b031681565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156104c057600080fd5b505afa1580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190612619565b6001600160a01b031614806105835750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561054b57600080fd5b505afa15801561055f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058391906126e1565b6105a85760405162461bcd60e51b815260040161059f90612769565b60405180910390fd5b60006105b38361255d565b90506000600660008360028111156105db57634e487b7160e01b600052602160045260246000fd5b60028111156105fa57634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020549050600282600281111561062f57634e487b7160e01b600052602160045260246000fd5b14156106e557600160005260066020526000805160206128708339815191525483118015610696575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854600160005260008051602061287083398151915254115b80156106d757506000600681805b60028111156106c357634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154115b6106e057600080fd5b61081f565b600182600281111561070757634e487b7160e01b600052602160045260246000fd5b141561078157600260005260066020527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace29548310801561069657506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854831180156106d757506000600681806106a4565b60008260028111156107a357634e487b7160e01b600052602160045260246000fd5b141561081f5760066020526000805160206128708339815191525460026000527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace295411801561080a5750600160005260066020526000805160206128708339815191525483105b80156108165750600083115b61081f57600080fd5b826006600086600281111561084457634e487b7160e01b600052602160045260246000fd5b600281111561086357634e487b7160e01b600052602160045260246000fd5b815260208082019290925260409081016000209290925581518381529081018590527f240772d6994e765d6a8e5bdf73ae5fff4eb4de779e7ae3b36ae4f458f590b552910160405180910390a150505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109329190612619565b6001600160a01b031614806109bd5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561098557600080fd5b505afa158015610999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bd91906126e1565b6109d95760405162461bcd60e51b815260040161059f90612769565b60035460ff63010000009091041615158115151415610a0a5760405162461bcd60e51b815260040161059f906127a0565b6003805482151563010000000263ff000000199091161790556040517fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f990610a5790831515815260200190565b60405180910390a150565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610aa657600080fd5b505afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190612619565b6001600160a01b03161480610b695750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610b3157600080fd5b505afa158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6991906126e1565b610b855760405162461bcd60e51b815260040161059f90612769565b6001600160a01b03821660009081526008602052604090206001015460ff1615158115151415610bc75760405162461bcd60e51b815260040161059f906127a0565b604080518082018252600454815282151560208083018281526001600160a01b0387166000818152600884528690209451855590516001909401805460ff191694151594909417909355925190815290917f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa98910160405180910390a25050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610c8b57600080fd5b505afa158015610c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc39190612619565b6001600160a01b03161480610d4e5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610d1657600080fd5b505afa158015610d2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e91906126e1565b610d6a5760405162461bcd60e51b815260040161059f90612769565b60035460ff620100009091041615158115151415610d9a5760405162461bcd60e51b815260040161059f906127a0565b60038054821515620100000262ff0000199091161790556040517f91165ce3ea12d2f38c117706dca0cfdeefca89338a64dff731ab3c30a7b890e390610a5790831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610e2957600080fd5b505afa158015610e3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e619190612619565b6001600160a01b03161480610eec5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610eb457600080fd5b505afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec91906126e1565b610f085760405162461bcd60e51b815260040161059f90612769565b6001600160a01b03821660009081526007602052604090206001015460ff16610f855760405162461bcd60e51b815260206004820152602960248201527f466565436f6e74726f6c6c65723a206173736574206578656d7074696f6e206e6044820152686f742061637469766560b81b606482015260840161059f565b6001600160a01b038216600081815260076020908152604091829020805490859055825181815291820185905292917f2c4b2f302ea040ab407534b2d7cc4bc99334eb41a2b3f2c6f363fd0a1648f5d491015b60405180910390a2505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561102957600080fd5b505afa15801561103d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110619190612619565b6001600160a01b031614806110ec5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156110b457600080fd5b505afa1580156110c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ec91906126e1565b6111085760405162461bcd60e51b815260040161059f90612769565b603281106111445760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b604482015260640161059f565b60045460408051918252602082018390527faee9027cd52cd36ed373913dcea55a98babe1ff97f4a046828a3b177ea49c305910160405180910390a1600455565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156111c957600080fd5b505afa1580156111dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112019190612619565b6001600160a01b0316148061128c5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561125457600080fd5b505afa158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c91906126e1565b6112a85760405162461bcd60e51b815260040161059f90612769565b60035460ff16151581151514156112d15760405162461bcd60e51b815260040161059f906127a0565b60405181151581527fe41c88aff510062186556cad0aed9c7a0d4b346a62664358e69f4a40f43e9ca99060200160405180910390a16003805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561135d57600080fd5b505afa158015611371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113959190612619565b6001600160a01b031614806114205750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156113e857600080fd5b505afa1580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142091906126e1565b61143c5760405162461bcd60e51b815260040161059f90612769565b6001600160a01b03821660009081526007602052604090206001015460ff161515811515141561147e5760405162461bcd60e51b815260040161059f906127a0565b80156114b0576001600160a01b0382166000908152600760205260409020600101805460ff19168215151790556114fc565b604080518082018252600554815282151560208083019182526001600160a01b03861660009081526007909152929092209051815590516001909101805460ff19169115159190911790555b604051600181527fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99060200160405180910390a15050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561157857600080fd5b505afa15801561158c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b09190612619565b6001600160a01b0316148061163b5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561160357600080fd5b505afa158015611617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163b91906126e1565b6116575760405162461bcd60e51b815260040161059f90612769565b60035460ff61010090910416151581151514156116865760405162461bcd60e51b815260040161059f906127a0565b600380548215156101000261ff00199091161790556040517f4b35d602e0cd107e255cddff136a82aa52d7e52cbeb0add60ad2044ea6b1649190610a5790831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561171357600080fd5b505afa158015611727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174b9190612619565b6001600160a01b0316146117a15760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161059f565b6001600160a01b03821660009081526002602052604090205460ff16151581151514156117e05760405162461bcd60e51b815260040161059f906127a0565b816001600160a01b03167f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa988260405161181d911515815260200190565b60405180910390a26001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561189457600080fd5b505afa1580156118a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cc9190612619565b6001600160a01b031614806119575750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561191f57600080fd5b505afa158015611933573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195791906126e1565b6119735760405162461bcd60e51b815260040161059f90612769565b6001600160a01b03821660009081526008602052604090206001015460ff166119ef5760405162461bcd60e51b815260206004820152602860248201527f466565436f6e74726f6c6c65723a2075736572206578656d7074696f6e206e6f604482015267742061637469766560c01b606482015260840161059f565b6001600160a01b038216600081815260086020908152604091829020805490859055825181815291820185905292917f8d27423b5b97272ddd630edf11c97bddbc21ef3df22e50023ce38cb00d7024469101610fd8565b60015460408051633199692b60e11b815290516000926001600160a01b031691636332d256916004808301926020929190829003018186803b158015611a8b57600080fd5b505afa158015611a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac391906126e1565b611acf57506000611bee565b60035460ff168015611af957506001600160a01b03831660009081526002602052604090205460ff165b15611b0657506000611bee565b6003546000906301000000900460ff1615611b65576001600160a01b03831660009081526007602052604090206001015460ff1615611b65576001600160a01b038316600090815260076020526040902054611b6290826127c5565b90505b60035462010000900460ff1615611bc0576001600160a01b03841660009081526008602052604090206001015460ff1615611bc0576001600160a01b038416600090815260086020526040902054611bbd90826127c5565b90505b600354610100900460ff1615611beb576000611bdb85612339565b9050611be781836127c5565b9150505b90505b92915050565b60015460408051633199692b60e11b815290516000926001600160a01b031691636332d256916004808301926020929190829003018186803b158015611c3957600080fd5b505afa158015611c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c7191906126e1565b611c7d57506000611bee565b60035460ff168015611ca757506001600160a01b03831660009081526002602052604090205460ff165b15611cb457506000611bee565b6000611cc08484611a46565b90506000600160009054906101000a90046001600160a01b03166001600160a01b0316638375bb396040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1257600080fd5b505afa158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4a9190612751565b905060648210611d5f57600092505050611bee565b6064611d6b82846127fd565b611d7591906127dd565b611d7f908261281c565b92505050611bee565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611dcc57600080fd5b505afa158015611de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e049190612619565b6001600160a01b03161480611e8f5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611e5757600080fd5b505afa158015611e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8f91906126e1565b611eab5760405162461bcd60e51b815260040161059f90612769565b60328110611ee75760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b604482015260640161059f565b60055460408051918252602082018390527fb04bf79637ebb6d6a977766f7b02543d5d6607154feb1668c15e2c02c27ae047910160405180910390a1600555565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611f6c57600080fd5b505afa158015611f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa49190612619565b6001600160a01b0316148061202f5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611ff757600080fd5b505afa15801561200b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202f91906126e1565b61204b5760405162461bcd60e51b815260040161059f90612769565b60006120568361255d565b9050600281600281111561207a57634e487b7160e01b600052602160045260246000fd5b141561213057600160005260066020526000805160206128b083398151915254821180156120e1575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95460016000526000805160206128b083398151915254115b801561212257506000600681805b600281111561210e57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060010154115b61212b57600080fd5b612246565b600181600281111561215257634e487b7160e01b600052602160045260246000fd5b14156121ba576002600052600660205260008051602061289083398151915254821080156120e157506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548211801561212257506000600681806120ef565b60008160028111156121dc57634e487b7160e01b600052602160045260246000fd5b14156122465760066020526000805160206128b0833981519152546002600052600080516020612890833981519152541180156122315750600160005260066020526000805160206128b08339815191525482105b801561223d5750600082115b61224657600080fd5b7f380370fc16cb5de7ba98c093cb2abe6e49cccb3e3f001e519ebcfe82f5cf139a6006600083600281111561228b57634e487b7160e01b600052602160045260246000fd5b60028111156122aa57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060010154836040516122d4929190918252602082015260400190565b60405180910390a1816006600083600281111561230157634e487b7160e01b600052602160045260246000fd5b600281111561232057634e487b7160e01b600052602160045260246000fd5b8152602081019190915260400160002060010155505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316635d911d126040518163ffffffff1660e01b815260040160206040518083038186803b15801561238a57600080fd5b505afa15801561239e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c29190612619565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a082319060240160206040518083038186803b15801561240557600080fd5b505afa158015612419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243d9190612751565b600260005260066020526000805160206128908339815191525490915081106124a0576006600060025b600281111561248657634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154915050612558565b6002600052600660205260008051602061289083398151915254811080156124e15750600160005260066020526000805160206128b0833981519152548110155b156124f157600660006001612467565b600160005260066020526000805160206128b0833981519152548110801561254357506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548110155b15612552576006600080612467565b60009150505b919050565b60008082600281111561258057634e487b7160e01b600052602160045260246000fd5b141561258e57506000612558565b60018260028111156125b057634e487b7160e01b600052602160045260246000fd5b14156125be57506001612558565b60028260028111156125e057634e487b7160e01b600052602160045260246000fd5b14156101c457506002612558565b80356003811061255857600080fd5b60006020828403121561260e578081fd5b8135611beb81612849565b60006020828403121561262a578081fd5b8151611beb81612849565b60008060408385031215612647578081fd5b823561265281612849565b9150602083013561266281612849565b809150509250929050565b6000806040838503121561267f578182fd5b823561268a81612849565b9150602083013561266281612861565b600080604083850312156126ac578182fd5b82356126b781612849565b946020939093013593505050565b6000602082840312156126d6578081fd5b8135611beb81612861565b6000602082840312156126f2578081fd5b8151611beb81612861565b60006020828403121561270e578081fd5b612717826125ee565b9392505050565b60008060408385031215612730578182fd5b6126b7836125ee565b60006020828403121561274a578081fd5b5035919050565b600060208284031215612762578081fd5b5051919050565b60208082526017908201527f63616c6c6572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b6020808252600b908201526a185b1c9958591e481cd95d60aa1b604082015260600190565b600082198211156127d8576127d8612833565b500190565b6000826127f857634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561281757612817612833565b500290565b60008282101561282e5761282e612833565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461285e57600080fd5b50565b801515811461285e57600080fdfe3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a318819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32a2646970667358221220c766aceb12ee3025b4dc8868c846b465af23b43f1c23a36a7f144849ed4e9fe564736f6c63430008020033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeController> {
    return super.deploy(
      _controller,
      _settings,
      overrides || {}
    ) as Promise<FeeController>;
  }
  override getDeployTransaction(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, _settings, overrides || {});
  }
  override attach(address: string): FeeController {
    return super.attach(address) as FeeController;
  }
  override connect(signer: Signer): FeeController__factory {
    return super.connect(signer) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new utils.Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeController {
    return new Contract(address, _abi, signerOrProvider) as FeeController;
  }
}
