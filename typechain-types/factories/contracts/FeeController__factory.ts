/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AddressExemptionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AssetIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIncentive",
        type: "uint256",
      },
    ],
    name: "AssetIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "BrgHoldingIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingIncentive",
        type: "uint256",
      },
    ],
    name: "BrgHoldingIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingThreshold",
        type: "uint256",
      },
    ],
    name: "BrgHoldingThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultAssetIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultUserIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "UserIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentIncentive",
        type: "uint256",
      },
    ],
    name: "UserIncentiveUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exemptionStatus",
        type: "bool",
      },
    ],
    name: "userExemptStatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAddressExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAssetIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateBRDGHoldingIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateIndexedTokenIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "activateIndexedUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deActivateIndexedUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAssetIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultUserIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "determineTokenHolderLevelPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "exemptAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexedTokenIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "incentivePercentage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "indexedUserIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "incentivePercentage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExempted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokenHolderIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "incentivePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "updateBRDGHoldingIncentiveThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultAssetIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultUserIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateIndexedTokenIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateTokenHoldingIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateUserExemptionPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useAssetIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useBRDGHoldingIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useExemption",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useUserIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a600455600a6005553480156200001b57600080fd5b5060405162002c3738038062002c378339810160408190526200003e91620001b9565b600080546001600160a01b039384166001600160a01b03199182161782556001805493909416921691909117825560408051808201825260148152690a968163f0a57b4000006020808301918252848052600680825292517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85590517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95582518084018452601e81526a01a784379d99db42000000818301908152958552828252517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315593517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32558151808301909252603282526a084595161401484a000000828501908152600290935290925290517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2955517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a5562000210565b60008060408385031215620001cc578182fd5b8251620001d981620001f7565b6020840151909250620001ec81620001f7565b809150509250929050565b6001600160a01b03811681146200020d57600080fd5b50565b612a1780620002206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80639fcb58bf116100f9578063c548d9b711610097578063e06174e411610071578063e06174e414610422578063f2b804071461044d578063f2dcc1eb14610460578063f77c479114610469576101c4565b8063c548d9b7146103ef578063c6521a09146103fc578063cef8f6b01461040f576101c4565b8063b306760d116100d3578063b306760d146103a4578063b43b5ebc146103b6578063ba9527fe146103c9578063c0079605146103dc576101c4565b80639fcb58bf14610354578063a3019cf81461037e578063aaddc3be14610391576101c4565b80635ebbc3301161016657806368a8d9f11161014057806368a8d9f1146102dc57806368efca891461031b57806394018c4a1461032e5780639b9d245514610341576101c4565b80635ebbc3301461027957806361491ac51461028c578063632b7333146102c8576101c4565b806322193f91116101a257806322193f911461022d57806336a17d14146102405780633e8addf1146102535780634019129414610266576101c4565b806302a03d36146101c9578063079eb7fb146101e55780631f78d3e014610218575b600080fd5b6101d260055481565b6040519081526020015b60405180910390f35b6102086101f336600461270f565b60026020526000908152604090205460ff1681565b60405190151581526020016101dc565b61022b610226366004612830565b61047c565b005b61022b61023b3660046127de565b6108b6565b61022b61024e3660046127de565b610a62565b61022b61026136600461270f565b610c00565b61022b6102743660046127b3565b610dfc565b61022b61028736600461284b565b610ffc565b6102b361029a366004612816565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016101dc565b600354610208906301000000900460ff1681565b6103066102ea36600461270f565b6008602052600090815260409020805460019091015460ff1682565b604080519283529015156020830152016101dc565b61022b6103293660046127de565b61119c565b61022b61033c366004612786565b611330565b61022b61034f3660046127de565b61154b565b61030661036236600461270f565b6007602052600090815260409020805460019091015460ff1682565b61022b61038c366004612786565b6116e6565b61022b61039f3660046127b3565b611867565b60035461020890610100900460ff1681565b6003546102089062010000900460ff1681565b6101d26103d736600461274e565b611a5d565b61022b6103ea36600461284b565b611cc3565b6003546102089060ff1681565b61022b61040a366004612830565b611e63565b6101d261041d36600461270f565b612274565b600154610435906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b61022b61045b36600461270f565b612498565b6101d260045481565b600054610435906001600160a01b031681565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156104c057600080fd5b505afa1580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190612732565b6001600160a01b031614806105835750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561054b57600080fd5b505afa15801561055f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058391906127fa565b6105a85760405162461bcd60e51b815260040161059f9061287b565b60405180910390fd5b60006105b38361266f565b90506000600660008360028111156105db57634e487b7160e01b600052602160045260246000fd5b60028111156105fa57634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020549050600282600281111561062f57634e487b7160e01b600052602160045260246000fd5b14156106e557600160005260066020526000805160206129828339815191525483118015610696575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854600160005260008051602061298283398151915254115b80156106d757506000600681805b60028111156106c357634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154115b6106e057600080fd5b61081f565b600182600281111561070757634e487b7160e01b600052602160045260246000fd5b141561078157600260005260066020527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace29548310801561069657506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854831180156106d757506000600681806106a4565b60008260028111156107a357634e487b7160e01b600052602160045260246000fd5b141561081f5760066020526000805160206129828339815191525460026000527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace295411801561080a5750600160005260066020526000805160206129828339815191525483105b80156108165750600083115b61081f57600080fd5b826006600086600281111561084457634e487b7160e01b600052602160045260246000fd5b600281111561086357634e487b7160e01b600052602160045260246000fd5b815260208082019290925260409081016000209290925581518381529081018590527f240772d6994e765d6a8e5bdf73ae5fff4eb4de779e7ae3b36ae4f458f590b552910160405180910390a150505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109329190612732565b6001600160a01b031614806109bd5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561098557600080fd5b505afa158015610999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bd91906127fa565b6109d95760405162461bcd60e51b815260040161059f9061287b565b60035460ff63010000009091041615158115151415610a0a5760405162461bcd60e51b815260040161059f906128b2565b6003805482151563010000000263ff000000199091161790556040517fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f990610a5790831515815260200190565b60405180910390a150565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610aa657600080fd5b505afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade9190612732565b6001600160a01b03161480610b695750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610b3157600080fd5b505afa158015610b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6991906127fa565b610b855760405162461bcd60e51b815260040161059f9061287b565b60035460ff620100009091041615158115151415610bb55760405162461bcd60e51b815260040161059f906128b2565b60038054821515620100000262ff0000199091161790556040517f91165ce3ea12d2f38c117706dca0cfdeefca89338a64dff731ab3c30a7b890e390610a5790831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610c4457600080fd5b505afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190612732565b6001600160a01b03161480610d075750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610ccf57600080fd5b505afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0791906127fa565b610d235760405162461bcd60e51b815260040161059f9061287b565b6001600160a01b03811660009081526008602052604090206001015460ff16610d7f5760405162461bcd60e51b815260206004820152600e60248201526d616c72656164792061637469766560901b604482015260640161059f565b6040805180820182526004548152600160208083018281526001600160a01b038616600081815260088452869020945185559051938301805460ff191694151594909417909355925190815290917f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa9891015b60405180910390a250565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610e4057600080fd5b505afa158015610e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e789190612732565b6001600160a01b03161480610f035750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610ecb57600080fd5b505afa158015610edf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0391906127fa565b610f1f5760405162461bcd60e51b815260040161059f9061287b565b6001600160a01b03821660009081526007602052604090206001015460ff16610f9c5760405162461bcd60e51b815260206004820152602960248201527f466565436f6e74726f6c6c65723a206173736574206578656d7074696f6e206e6044820152686f742061637469766560b81b606482015260840161059f565b6001600160a01b038216600081815260076020908152604091829020805490859055825181815291820185905292917f2c4b2f302ea040ab407534b2d7cc4bc99334eb41a2b3f2c6f363fd0a1648f5d491015b60405180910390a2505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190612732565b6001600160a01b031614806111035750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156110cb57600080fd5b505afa1580156110df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110391906127fa565b61111f5760405162461bcd60e51b815260040161059f9061287b565b6032811061115b5760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b604482015260640161059f565b60045460408051918252602082018390527faee9027cd52cd36ed373913dcea55a98babe1ff97f4a046828a3b177ea49c305910160405180910390a1600455565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156111e057600080fd5b505afa1580156111f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112189190612732565b6001600160a01b031614806112a35750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561126b57600080fd5b505afa15801561127f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a391906127fa565b6112bf5760405162461bcd60e51b815260040161059f9061287b565b60035460ff16151581151514156112e85760405162461bcd60e51b815260040161059f906128b2565b60405181151581527fe41c88aff510062186556cad0aed9c7a0d4b346a62664358e69f4a40f43e9ca99060200160405180910390a16003805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561137457600080fd5b505afa158015611388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ac9190612732565b6001600160a01b031614806114375750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156113ff57600080fd5b505afa158015611413573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143791906127fa565b6114535760405162461bcd60e51b815260040161059f9061287b565b6001600160a01b03821660009081526007602052604090206001015460ff16151581151514156114955760405162461bcd60e51b815260040161059f906128b2565b80156114c7576001600160a01b0382166000908152600760205260409020600101805460ff1916821515179055611513565b604080518082018252600554815282151560208083019182526001600160a01b03861660009081526007909152929092209051815590516001909101805460ff19169115159190911790555b604051600181527fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99060200160405180910390a15050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561158f57600080fd5b505afa1580156115a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c79190612732565b6001600160a01b031614806116525750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561161a57600080fd5b505afa15801561162e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165291906127fa565b61166e5760405162461bcd60e51b815260040161059f9061287b565b60035460ff610100909104161515811515141561169d5760405162461bcd60e51b815260040161059f906128b2565b600380548215156101000261ff00199091161790556040517f4b35d602e0cd107e255cddff136a82aa52d7e52cbeb0add60ad2044ea6b1649190610a5790831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561172a57600080fd5b505afa15801561173e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117629190612732565b6001600160a01b0316146117b85760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161059f565b6001600160a01b03821660009081526002602052604090205460ff16151581151514156117f75760405162461bcd60e51b815260040161059f906128b2565b816001600160a01b03167f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa9882604051611834911515815260200190565b60405180910390a26001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156118ab57600080fd5b505afa1580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e39190612732565b6001600160a01b0316148061196e5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561193657600080fd5b505afa15801561194a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196e91906127fa565b61198a5760405162461bcd60e51b815260040161059f9061287b565b6001600160a01b03821660009081526008602052604090206001015460ff16611a065760405162461bcd60e51b815260206004820152602860248201527f466565436f6e74726f6c6c65723a2075736572206578656d7074696f6e206e6f604482015267742061637469766560c01b606482015260840161059f565b6001600160a01b038216600081815260086020908152604091829020805490859055825181815291820185905292917f8d27423b5b97272ddd630edf11c97bddbc21ef3df22e50023ce38cb00d7024469101610fef565b60015460408051633199692b60e11b815290516000926001600160a01b031691636332d256916004808301926020929190829003018186803b158015611aa257600080fd5b505afa158015611ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ada91906127fa565b611ae657506000611cbd565b60015460408051638375bb3960e01b815290516000926001600160a01b031691638375bb39916004808301926020929190829003018186803b158015611b2b57600080fd5b505afa158015611b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b639190612863565b60035490915060009060ff168015611b9357506001600160a01b03851660009081526002602052604090205460ff165b15611ba357600092505050611cbd565b6003546301000000900460ff1615611bff576001600160a01b03841660009081526007602052604090206001015460ff1615611bff576001600160a01b038416600090815260076020526040902054611bfc90826128d7565b90505b60035462010000900460ff1615611c5a576001600160a01b03851660009081526008602052604090206001015460ff1615611c5a576001600160a01b038516600090815260086020526040902054611c5790826128d7565b90505b600354610100900460ff1615611c85576000611c7586612274565b9050611c8181836128d7565b9150505b60648110611c9857600092505050611cbd565b6064611ca4838361290f565b611cae91906128ef565b611cb8908361292e565b925050505b92915050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611d0757600080fd5b505afa158015611d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3f9190612732565b6001600160a01b03161480611dca5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611d9257600080fd5b505afa158015611da6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dca91906127fa565b611de65760405162461bcd60e51b815260040161059f9061287b565b60328110611e225760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b604482015260640161059f565b60055460408051918252602082018390527fb04bf79637ebb6d6a977766f7b02543d5d6607154feb1668c15e2c02c27ae047910160405180910390a1600555565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611ea757600080fd5b505afa158015611ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edf9190612732565b6001600160a01b03161480611f6a5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611f3257600080fd5b505afa158015611f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6a91906127fa565b611f865760405162461bcd60e51b815260040161059f9061287b565b6000611f918361266f565b90506002816002811115611fb557634e487b7160e01b600052602160045260246000fd5b141561206b57600160005260066020526000805160206129c2833981519152548211801561201c575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95460016000526000805160206129c283398151915254115b801561205d57506000600681805b600281111561204957634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060010154115b61206657600080fd5b612181565b600181600281111561208d57634e487b7160e01b600052602160045260246000fd5b14156120f557600260005260066020526000805160206129a2833981519152548210801561201c57506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548211801561205d575060006006818061202a565b600081600281111561211757634e487b7160e01b600052602160045260246000fd5b14156121815760066020526000805160206129c28339815191525460026000526000805160206129a28339815191525411801561216c5750600160005260066020526000805160206129c28339815191525482105b80156121785750600082115b61218157600080fd5b7f380370fc16cb5de7ba98c093cb2abe6e49cccb3e3f001e519ebcfe82f5cf139a600660008360028111156121c657634e487b7160e01b600052602160045260246000fd5b60028111156121e557634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020600101548360405161220f929190918252602082015260400190565b60405180910390a1816006600083600281111561223c57634e487b7160e01b600052602160045260246000fd5b600281111561225b57634e487b7160e01b600052602160045260246000fd5b8152602081019190915260400160002060010155505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316635d911d126040518163ffffffff1660e01b815260040160206040518083038186803b1580156122c557600080fd5b505afa1580156122d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122fd9190612732565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a082319060240160206040518083038186803b15801561234057600080fd5b505afa158015612354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123789190612863565b600260005260066020526000805160206129a28339815191525490915081106123db576006600060025b60028111156123c157634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154915050612493565b600260005260066020526000805160206129a2833981519152548110801561241c5750600160005260066020526000805160206129c2833981519152548110155b1561242c576006600060016123a2565b600160005260066020526000805160206129c2833981519152548110801561247e57506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548110155b1561248d5760066000806123a2565b60009150505b919050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156124dc57600080fd5b505afa1580156124f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125149190612732565b6001600160a01b0316148061259f5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561256757600080fd5b505afa15801561257b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259f91906127fa565b6125bb5760405162461bcd60e51b815260040161059f9061287b565b6001600160a01b03811660009081526008602052604090206001015460ff161561261d5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e4819195858dd1a5d985d1959606a1b604482015260640161059f565b6001600160a01b0381166000818152600860209081526040808320600101805460ff19169055519182527f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa989101610df1565b60008082600281111561269257634e487b7160e01b600052602160045260246000fd5b14156126a057506000612493565b60018260028111156126c257634e487b7160e01b600052602160045260246000fd5b14156126d057506001612493565b60028260028111156126f257634e487b7160e01b600052602160045260246000fd5b14156101c457506002612493565b80356003811061249357600080fd5b600060208284031215612720578081fd5b813561272b8161295b565b9392505050565b600060208284031215612743578081fd5b815161272b8161295b565b60008060408385031215612760578081fd5b823561276b8161295b565b9150602083013561277b8161295b565b809150509250929050565b60008060408385031215612798578182fd5b82356127a38161295b565b9150602083013561277b81612973565b600080604083850312156127c5578182fd5b82356127d08161295b565b946020939093013593505050565b6000602082840312156127ef578081fd5b813561272b81612973565b60006020828403121561280b578081fd5b815161272b81612973565b600060208284031215612827578081fd5b61272b82612700565b60008060408385031215612842578182fd5b6127d083612700565b60006020828403121561285c578081fd5b5035919050565b600060208284031215612874578081fd5b5051919050565b60208082526017908201527f63616c6c6572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b6020808252600b908201526a185b1c9958591e481cd95d60aa1b604082015260600190565b600082198211156128ea576128ea612945565b500190565b60008261290a57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561292957612929612945565b500290565b60008282101561294057612940612945565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461297057600080fd5b50565b801515811461297057600080fdfe3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a318819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32a264697066735822122099c04e6f38bc1b3ebcb278f485242ad059c26dc8844a21bf6573bcf063ebf05f64736f6c63430008020033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeController> {
    return super.deploy(
      _controller,
      _settings,
      overrides || {}
    ) as Promise<FeeController>;
  }
  override getDeployTransaction(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, _settings, overrides || {});
  }
  override attach(address: string): FeeController {
    return super.attach(address) as FeeController;
  }
  override connect(signer: Signer): FeeController__factory {
    return super.connect(signer) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new utils.Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeController {
    return new Contract(address, _abi, signerOrProvider) as FeeController;
  }
}
