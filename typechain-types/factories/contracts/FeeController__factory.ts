/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AddressExemptionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AssetIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIncentive",
        type: "uint256",
      },
    ],
    name: "AssetIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "BrgHoldingIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingIncentive",
        type: "uint256",
      },
    ],
    name: "BrgHoldingIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingThreshold",
        type: "uint256",
      },
    ],
    name: "BrgHoldingThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exemptionStatus",
        type: "bool",
      },
    ],
    name: "userExemptStatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAddressExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAssetIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateBrgHoldingIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "brgHoldingIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "brgHoldingThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "exemptAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainTo",
        type: "uint256",
      },
    ],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "incentive",
        type: "uint256",
      },
    ],
    name: "getIncentive",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExempted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minUpdateDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "incentive",
        type: "uint256",
      },
    ],
    name: "setAssetIncentivization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "incentive",
        type: "uint256",
      },
    ],
    name: "setBrgHoldingIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "setBrgHoldingThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useAssetIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useExemption",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usebrgHoldingIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052601460045534801561001557600080fd5b5060405161132e38038061132e83398101604081905261003491610065565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b6565b60008060408385031215610077578182fd5b82516100828161009e565b60208401519092506100938161009e565b809150509250929050565b6001600160a01b03811681146100b357600080fd5b50565b611269806100c56000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806368efca89116100ad578063c548d9b711610071578063c548d9b714610254578063cdc4f82014610261578063e06174e414610273578063f1de6b0a1461029e578063f77c4791146102b157610121565b806368efca89146101f2578063806df80214610205578063a3019cf814610218578063a4a04e071461022b578063a6db63bd1461024b57610121565b806322193f91116100f457806322193f911461019157806332967681146101a65780633f7774bd146101b95780634ac5462e146101cc578063632b7333146101df57610121565b8063079eb7fb146101265780630b76511b1461015e57806315e2e2991461017557806317037f321461017e575b600080fd5b610149610134366004610f92565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61016760075481565b604051908152602001610155565b61016760035481565b61016761018c366004610fca565b6102c4565b6101a461019f36600461106d565b610548565b005b6101a46101b436600461106d565b6106f5565b6101a46101c73660046110a5565b610896565b6101676101da3660046110d5565b6109d9565b6006546101499062010000900460ff1681565b6101a461020036600461106d565b610a14565b6101a46102133660046110a5565b610ba8565b6101a461022636600461100a565b610cad565b610167610239366004610f92565b60056020526000908152604090205481565b61016760045481565b6006546101499060ff1681565b60065461014990610100900460ff1681565b600154610286906001600160a01b031681565b6040516001600160a01b039091168152602001610155565b6101a46102ac366004611042565b610dfe565b600054610286906001600160a01b031681565b6001546040516301343ed960e31b81526004810183905260009182916001600160a01b03909116906309a1f6c89060240160206040518083038186803b15801561030d57600080fd5b505afa158015610321573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034591906110bd565b60065490915060009060ff16801561037557506001600160a01b03861660009081526002602052604090205460ff165b1561038557600092505050610541565b600654610100900460ff16156104ae57600354600160009054906101000a90046001600160a01b03166001600160a01b0316635d911d126040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e657600080fd5b505afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190610fae565b6040516370a0823160e01b81526001600160a01b03898116600483015291909116906370a082319060240160206040518083038186803b15801561046157600080fd5b505afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049991906110bd565b106104ae576004546104ab9082611189565b90505b60065462010000900460ff1680156104dd57506001600160a01b03851660009081526005602052604090205415155b15610508576001600160a01b0385166000908152600560205260409020546105059082611189565b90505b6064811061051b57600092505050610541565b8061052857509050610541565b61053282826109d9565b61053c90836111e0565b925050505b9392505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561058c57600080fd5b505afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c49190610fae565b6001600160a01b0316148061064f5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561061757600080fd5b505afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611089565b6106745760405162461bcd60e51b815260040161066b9061112d565b60405180910390fd5b60065460ff6201000090910416151581151514156106a45760405162461bcd60e51b815260040161066b90611164565b60405181151581527fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99060200160405180910390a160068054911515620100000262ff000019909216919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107719190610fae565b6001600160a01b031614806107fc5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156107c457600080fd5b505afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc9190611089565b6108185760405162461bcd60e51b815260040161066b9061112d565b60065460ff61010090910416151581151514156108475760405162461bcd60e51b815260040161066b90611164565b60405181151581527f4b35d602e0cd107e255cddff136a82aa52d7e52cbeb0add60ad2044ea6b164919060200160405180910390a1600680549115156101000261ff0019909216919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156108da57600080fd5b505afa1580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109129190610fae565b6001600160a01b0316146109385760405162461bcd60e51b815260040161066b906110f6565b80600454141561095a5760405162461bcd60e51b815260040161066b90611164565b606481106109985760405162461bcd60e51b815260206004820152600b60248201526a18589bdd99481b1a5b5a5d60aa1b604482015260640161066b565b60045460408051918252602082018390527f240772d6994e765d6a8e5bdf73ae5fff4eb4de779e7ae3b36ae4f458f590b552910160405180910390a1600455565b600060648211806109e8575081155b156109f557506000610a0e565b6064610a0184846111c1565b610a0b91906111a1565b90505b92915050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190610fae565b6001600160a01b03161480610b1b5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611089565b610b375760405162461bcd60e51b815260040161066b9061112d565b60065460ff1615158115151415610b605760405162461bcd60e51b815260040161066b90611164565b60405181151581527fe41c88aff510062186556cad0aed9c7a0d4b346a62664358e69f4a40f43e9ca99060200160405180910390a16006805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610bec57600080fd5b505afa158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c249190610fae565b6001600160a01b031614610c4a5760405162461bcd60e51b815260040161066b906110f6565b806003541415610c6c5760405162461bcd60e51b815260040161066b90611164565b60035460408051918252602082018390527f380370fc16cb5de7ba98c093cb2abe6e49cccb3e3f001e519ebcfe82f5cf139a910160405180910390a1600355565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610cf157600080fd5b505afa158015610d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d299190610fae565b6001600160a01b031614610d4f5760405162461bcd60e51b815260040161066b906110f6565b6001600160a01b03821660009081526002602052604090205460ff1615158115151415610d8e5760405162461bcd60e51b815260040161066b90611164565b816001600160a01b03167f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa9882604051610dcb911515815260200190565b60405180910390a26001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610e4257600080fd5b505afa158015610e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7a9190610fae565b6001600160a01b031614610ea05760405162461bcd60e51b815260040161066b906110f6565b6001600160a01b038216600090815260056020526040902054811415610ed85760405162461bcd60e51b815260040161066b90611164565b606460045482610ee89190611189565b10610f235760405162461bcd60e51b815260206004820152600b60248201526a18589bdd99481b1a5b5a5d60aa1b604482015260640161066b565b6001600160a01b0382166000818152600560209081526040918290205482519081529081018490527f2c4b2f302ea040ab407534b2d7cc4bc99334eb41a2b3f2c6f363fd0a1648f5d4910160405180910390a26001600160a01b03909116600090815260056020526040902055565b600060208284031215610fa3578081fd5b81356105418161120d565b600060208284031215610fbf578081fd5b81516105418161120d565b600080600060608486031215610fde578182fd5b8335610fe98161120d565b92506020840135610ff98161120d565b929592945050506040919091013590565b6000806040838503121561101c578182fd5b82356110278161120d565b9150602083013561103781611225565b809150509250929050565b60008060408385031215611054578182fd5b823561105f8161120d565b946020939093013593505050565b60006020828403121561107e578081fd5b813561054181611225565b60006020828403121561109a578081fd5b815161054181611225565b6000602082840312156110b6578081fd5b5035919050565b6000602082840312156110ce578081fd5b5051919050565b600080604083850312156110e7578182fd5b50508035926020909101359150565b60208082526018908201527f2063616c6c6572206973206e6f7420746865206f776e65720000000000000000604082015260600190565b60208082526018908201527f2063616c6c6572206973206e6f74207468652061646d696e0000000000000000604082015260600190565b6020808252600b908201526a185b1c9958591e481cd95d60aa1b604082015260600190565b6000821982111561119c5761119c6111f7565b500190565b6000826111bc57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156111db576111db6111f7565b500290565b6000828210156111f2576111f26111f7565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461122257600080fd5b50565b801515811461122257600080fdfea2646970667358221220097d6101ac5556c882aa956b71cd158a882e7260ea2b1e9bf51f29185dcb400164736f6c63430008020033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeController> {
    return super.deploy(
      _controller,
      _settings,
      overrides || {}
    ) as Promise<FeeController>;
  }
  override getDeployTransaction(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, _settings, overrides || {});
  }
  override attach(address: string): FeeController {
    return super.attach(address) as FeeController;
  }
  override connect(signer: Signer): FeeController__factory {
    return super.connect(signer) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new utils.Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeController {
    return new Contract(address, _abi, signerOrProvider) as FeeController;
  }
}
