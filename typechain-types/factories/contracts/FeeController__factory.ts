/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FeeController,
  FeeControllerInterface,
} from "../../contracts/FeeController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AddressExemptionStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "AssetIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newIncentive",
        type: "uint256",
      },
    ],
    name: "AssetIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "BrgHoldingIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingIncentive",
        type: "uint256",
      },
    ],
    name: "BrgHoldingIncentiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevBrgHoldingThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBrgHoldingThreshold",
        type: "uint256",
      },
    ],
    name: "BrgHoldingThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultAssetIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevVal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "DefaultUserIncentivePercentageUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "UserIncentiveStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentIncentive",
        type: "uint256",
      },
    ],
    name: "UserIncentiveUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "exemptionStatus",
        type: "bool",
      },
    ],
    name: "userExemptStatusChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAddressExemption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateAssetIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateBRDGHoldingIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateIndexedTokenIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateIndexedUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "activateUserIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAssetIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultUserIncentivePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "determineTokenHolderLevelPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "exemptAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getTotalIncentives",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExempted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "updateBRDGHoldingIncentiveThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultAssetIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateDefaultUserIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateIndexedTokenIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FeeController.HoldingLevels",
        name: "tokenHoldingLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateTokenHoldingIncentivePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "updateUserExemptionPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "useAssetIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useBRDGHoldingIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useExemption",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "useUserIncentive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a600455600a6005553480156200001b57600080fd5b5060405162002a0338038062002a038339810160408190526200003e91620001b9565b600080546001600160a01b039384166001600160a01b03199182161782556001805493909416921691909117825560408051808201825260038152690a968163f0a57b4000006020808301918252848052600680825292517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85590517f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f95582518084018452600781526a01a784379d99db42000000818301908152958552828252517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a315593517f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32558151808301909252600f82526a084595161401484a000000828501908152600290935290925290517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2955517f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a5562000210565b60008060408385031215620001cc578182fd5b8251620001d981620001f7565b6020840151909250620001ec81620001f7565b809150509250929050565b6001600160a01b03811681146200020d57600080fd5b50565b6127e380620002206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063a3019cf8116100de578063c007960511610097578063cef8f6b011610071578063cef8f6b01461032c578063e06174e41461033f578063f2dcc1eb1461036a578063f77c47911461037357610173565b8063c0079605146102f9578063c548d9b71461030c578063c6521a091461031957610173565b8063a3019cf814610288578063aaddc3be1461029b578063ae129183146102ae578063b306760d146102c1578063b43b5ebc146102d3578063ba9527fe146102e657610173565b8063401912941161013057806340191294146102155780635ebbc33014610228578063632b73331461023b57806368efca891461024f57806394018c4a146102625780639b9d24551461027557610173565b806302a03d3614610178578063079eb7fb146101945780631f78d3e0146101c757806322193f91146101dc57806334f1511d146101ef57806336a17d1414610202575b600080fd5b61018160055481565b6040519081526020015b60405180910390f35b6101b76101a23660046124f7565b60026020526000908152604090205460ff1681565b604051901515815260200161018b565b6101da6101d53660046125f7565b610386565b005b6101da6101ea3660046125bf565b6107c0565b6101da6101fd366004612567565b61096c565b6101da6102103660046125bf565b610b50565b6101da610223366004612594565b610cee565b6101da610236366004612617565b610eee565b6003546101b7906301000000900460ff1681565b6101da61025d3660046125bf565b61108e565b6101da610270366004612567565b611222565b6101da6102833660046125bf565b61143d565b6101da610296366004612567565b6115d8565b6101da6102a9366004612594565b611759565b6101816102bc36600461252f565b61194f565b6003546101b790610100900460ff1681565b6003546101b79062010000900460ff1681565b6101816102f436600461252f565b611afd565b6101da610307366004612617565b611c91565b6003546101b79060ff1681565b6101da6103273660046125f7565b611e31565b61018161033a3660046124f7565b612242565b600154610352906001600160a01b031681565b6040516001600160a01b03909116815260200161018b565b61018160045481565b600054610352906001600160a01b031681565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156103ca57600080fd5b505afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190612513565b6001600160a01b0316148061048d5750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561045557600080fd5b505afa158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d91906125db565b6104b25760405162461bcd60e51b81526004016104a990612647565b60405180910390fd5b60006104bd83612466565b90506000600660008360028111156104e557634e487b7160e01b600052602160045260246000fd5b600281111561050457634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020549050600282600281111561053957634e487b7160e01b600052602160045260246000fd5b14156105ef576001600052600660205260008051602061274e83398151915254831180156105a0575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854600160005260008051602061274e83398151915254115b80156105e157506000600681805b60028111156105cd57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154115b6105ea57600080fd5b610729565b600182600281111561061157634e487b7160e01b600052602160045260246000fd5b141561068b57600260005260066020527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2954831080156105a057506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854831180156105e157506000600681806105ae565b60008260028111156106ad57634e487b7160e01b600052602160045260246000fd5b141561072957600660205260008051602061274e8339815191525460026000527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace295411801561071457506001600052600660205260008051602061274e8339815191525483105b80156107205750600083115b61072957600080fd5b826006600086600281111561074e57634e487b7160e01b600052602160045260246000fd5b600281111561076d57634e487b7160e01b600052602160045260246000fd5b815260208082019290925260409081016000209290925581518381529081018590527f240772d6994e765d6a8e5bdf73ae5fff4eb4de779e7ae3b36ae4f458f590b552910160405180910390a150505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561080457600080fd5b505afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c9190612513565b6001600160a01b031614806108c75750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561088f57600080fd5b505afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c791906125db565b6108e35760405162461bcd60e51b81526004016104a990612647565b60035460ff630100000090910416151581151514156109145760405162461bcd60e51b81526004016104a99061267e565b6003805482151563010000000263ff000000199091161790556040517fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99061096190831515815260200190565b60405180910390a150565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156109b057600080fd5b505afa1580156109c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e89190612513565b6001600160a01b03161480610a735750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610a3b57600080fd5b505afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7391906125db565b610a8f5760405162461bcd60e51b81526004016104a990612647565b6001600160a01b03821660009081526008602052604090206001015460ff16158115151415610ad05760405162461bcd60e51b81526004016104a99061267e565b604080518082018252600454815282151560208083018281526001600160a01b0387166000818152600884528690209451855590516001909401805460ff191694151594909417909355925190815290917f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa98910160405180910390a25050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610b9457600080fd5b505afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190612513565b6001600160a01b03161480610c575750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610c1f57600080fd5b505afa158015610c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5791906125db565b610c735760405162461bcd60e51b81526004016104a990612647565b60035460ff620100009091041615158115151415610ca35760405162461bcd60e51b81526004016104a99061267e565b60038054821515620100000262ff0000199091161790556040517f91165ce3ea12d2f38c117706dca0cfdeefca89338a64dff731ab3c30a7b890e39061096190831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610d3257600080fd5b505afa158015610d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6a9190612513565b6001600160a01b03161480610df55750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610dbd57600080fd5b505afa158015610dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df591906125db565b610e115760405162461bcd60e51b81526004016104a990612647565b6001600160a01b03821660009081526007602052604090206001015460ff16610e8e5760405162461bcd60e51b815260206004820152602960248201527f466565436f6e74726f6c6c65723a206173736574206578656d7074696f6e206e6044820152686f742061637469766560b81b60648201526084016104a9565b6001600160a01b038216600081815260076020908152604091829020805490859055825181815291820185905292917f2c4b2f302ea040ab407534b2d7cc4bc99334eb41a2b3f2c6f363fd0a1648f5d491015b60405180910390a2505050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015610f3257600080fd5b505afa158015610f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6a9190612513565b6001600160a01b03161480610ff55750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610fbd57600080fd5b505afa158015610fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff591906125db565b6110115760405162461bcd60e51b81526004016104a990612647565b6032811061104d5760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b60448201526064016104a9565b60045460408051918252602082018390527faee9027cd52cd36ed373913dcea55a98babe1ff97f4a046828a3b177ea49c305910160405180910390a1600455565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b1580156110d257600080fd5b505afa1580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a9190612513565b6001600160a01b031614806111955750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561115d57600080fd5b505afa158015611171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119591906125db565b6111b15760405162461bcd60e51b81526004016104a990612647565b60035460ff16151581151514156111da5760405162461bcd60e51b81526004016104a99061267e565b60405181151581527fe41c88aff510062186556cad0aed9c7a0d4b346a62664358e69f4a40f43e9ca99060200160405180910390a16003805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561126657600080fd5b505afa15801561127a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129e9190612513565b6001600160a01b031614806113295750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156112f157600080fd5b505afa158015611305573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132991906125db565b6113455760405162461bcd60e51b81526004016104a990612647565b6001600160a01b03821660009081526007602052604090206001015460ff16151581151514156113875760405162461bcd60e51b81526004016104a99061267e565b80156113b9576001600160a01b0382166000908152600760205260409020600101805460ff1916821515179055611405565b604080518082018252600554815282151560208083019182526001600160a01b03861660009081526007909152929092209051815590516001909101805460ff19169115159190911790555b604051600181527fe5184386e7442a96171dfb41f23bdc78158de15c8dd9203ba44911d1b970d4f99060200160405180910390a15050565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561148157600080fd5b505afa158015611495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b99190612513565b6001600160a01b031614806115445750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561150c57600080fd5b505afa158015611520573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154491906125db565b6115605760405162461bcd60e51b81526004016104a990612647565b60035460ff610100909104161515811515141561158f5760405162461bcd60e51b81526004016104a99061267e565b600380548215156101000261ff00199091161790556040517f4b35d602e0cd107e255cddff136a82aa52d7e52cbeb0add60ad2044ea6b164919061096190831515815260200190565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561161c57600080fd5b505afa158015611630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116549190612513565b6001600160a01b0316146116aa5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016104a9565b6001600160a01b03821660009081526002602052604090205460ff16151581151514156116e95760405162461bcd60e51b81526004016104a99061267e565b816001600160a01b03167f4cc34974eb9acb4b7c62e2ce960332b3bde023d0004e5f0bdeee9c458cc2aa9882604051611726911515815260200190565b60405180910390a26001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b15801561179d57600080fd5b505afa1580156117b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d59190612513565b6001600160a01b031614806118605750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561182857600080fd5b505afa15801561183c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186091906125db565b61187c5760405162461bcd60e51b81526004016104a990612647565b6001600160a01b03821660009081526008602052604090206001015460ff166118f85760405162461bcd60e51b815260206004820152602860248201527f466565436f6e74726f6c6c65723a2075736572206578656d7074696f6e206e6f604482015267742061637469766560c01b60648201526084016104a9565b6001600160a01b038216600081815260086020908152604091829020805490859055825181815291820185905292917f8d27423b5b97272ddd630edf11c97bddbc21ef3df22e50023ce38cb00d7024469101610ee1565b60015460408051633199692b60e11b815290516000926001600160a01b031691636332d256916004808301926020929190829003018186803b15801561199457600080fd5b505afa1580156119a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cc91906125db565b6119d857506000611af7565b60035460ff168015611a0257506001600160a01b03831660009081526002602052604090205460ff165b15611a0f57506000611af7565b6003546000906301000000900460ff1615611a6e576001600160a01b03831660009081526007602052604090206001015460ff1615611a6e576001600160a01b038316600090815260076020526040902054611a6b90826126a3565b90505b60035462010000900460ff1615611ac9576001600160a01b03841660009081526008602052604090206001015460ff1615611ac9576001600160a01b038416600090815260086020526040902054611ac690826126a3565b90505b600354610100900460ff1615611af4576000611ae485612242565b9050611af081836126a3565b9150505b90505b92915050565b60015460408051633199692b60e11b815290516000926001600160a01b031691636332d256916004808301926020929190829003018186803b158015611b4257600080fd5b505afa158015611b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7a91906125db565b611b8657506000611af7565b60035460ff168015611bb057506001600160a01b03831660009081526002602052604090205460ff165b15611bbd57506000611af7565b6000611bc9848461194f565b90506000600160009054906101000a90046001600160a01b03166001600160a01b0316638375bb396040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1b57600080fd5b505afa158015611c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c53919061262f565b905060648210611c6857600092505050611af7565b6064611c7482846126db565b611c7e91906126bb565b611c8890826126fa565b92505050611af7565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611cd557600080fd5b505afa158015611ce9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0d9190612513565b6001600160a01b03161480611d985750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611d6057600080fd5b505afa158015611d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9891906125db565b611db45760405162461bcd60e51b81526004016104a990612647565b60328110611df05760405162461bcd60e51b8152602060048201526009602482015268696e76616c6964202560b81b60448201526064016104a9565b60055460408051918252602082018390527fb04bf79637ebb6d6a977766f7b02543d5d6607154feb1668c15e2c02c27ae047910160405180910390a1600555565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b916004808301926020929190829003018186803b158015611e7557600080fd5b505afa158015611e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ead9190612513565b6001600160a01b03161480611f385750600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015611f0057600080fd5b505afa158015611f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3891906125db565b611f545760405162461bcd60e51b81526004016104a990612647565b6000611f5f83612466565b90506002816002811115611f8357634e487b7160e01b600052602160045260246000fd5b1415612039576001600052600660205260008051602061278e8339815191525482118015611fea575060066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f954600160005260008051602061278e83398151915254115b801561202b57506000600681805b600281111561201757634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060010154115b61203457600080fd5b61214f565b600181600281111561205b57634e487b7160e01b600052602160045260246000fd5b14156120c3576002600052600660205260008051602061276e8339815191525482108015611fea57506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548211801561202b5750600060068180611ff8565b60008160028111156120e557634e487b7160e01b600052602160045260246000fd5b141561214f57600660205260008051602061278e83398151915254600260005260008051602061276e8339815191525411801561213a57506001600052600660205260008051602061278e8339815191525482105b80156121465750600082115b61214f57600080fd5b7f380370fc16cb5de7ba98c093cb2abe6e49cccb3e3f001e519ebcfe82f5cf139a6006600083600281111561219457634e487b7160e01b600052602160045260246000fd5b60028111156121b357634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060010154836040516121dd929190918252602082015260400190565b60405180910390a1816006600083600281111561220a57634e487b7160e01b600052602160045260246000fd5b600281111561222957634e487b7160e01b600052602160045260246000fd5b8152602081019190915260400160002060010155505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316635d911d126040518163ffffffff1660e01b815260040160206040518083038186803b15801561229357600080fd5b505afa1580156122a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cb9190612513565b6040516370a0823160e01b81526001600160a01b03858116600483015291909116906370a082319060240160206040518083038186803b15801561230e57600080fd5b505afa158015612322573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612346919061262f565b6002600052600660205260008051602061276e8339815191525490915081106123a9576006600060025b600281111561238f57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060000154915050612461565b6002600052600660205260008051602061276e83398151915254811080156123ea57506001600052600660205260008051602061278e833981519152548110155b156123fa57600660006001612370565b6001600052600660205260008051602061278e833981519152548110801561244c57506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f9548110155b1561245b576006600080612370565b60009150505b919050565b60008082600281111561248957634e487b7160e01b600052602160045260246000fd5b141561249757506000612461565b60018260028111156124b957634e487b7160e01b600052602160045260246000fd5b14156124c757506001612461565b60028260028111156124e957634e487b7160e01b600052602160045260246000fd5b141561017357506002612461565b600060208284031215612508578081fd5b8135611af481612727565b600060208284031215612524578081fd5b8151611af481612727565b60008060408385031215612541578081fd5b823561254c81612727565b9150602083013561255c81612727565b809150509250929050565b60008060408385031215612579578182fd5b823561258481612727565b9150602083013561255c8161273f565b600080604083850312156125a6578182fd5b82356125b181612727565b946020939093013593505050565b6000602082840312156125d0578081fd5b8135611af48161273f565b6000602082840312156125ec578081fd5b8151611af48161273f565b60008060408385031215612609578182fd5b8235600381106125b1578283fd5b600060208284031215612628578081fd5b5035919050565b600060208284031215612640578081fd5b5051919050565b60208082526017908201527f63616c6c6572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b6020808252600b908201526a185b1c9958591e481cd95d60aa1b604082015260600190565b600082198211156126b6576126b6612711565b500190565b6000826126d657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156126f5576126f5612711565b500290565b60008282101561270c5761270c612711565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461273c57600080fd5b50565b801515811461273c57600080fdfe3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a318819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2a3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a32a264697066735822122024441544907781a86664ae59817bde995edf4f7549cc8fbcfd5c9e041b7ba46864736f6c63430008020033";

type FeeControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeController__factory extends ContractFactory {
  constructor(...args: FeeControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeController> {
    return super.deploy(
      _controller,
      _settings,
      overrides || {}
    ) as Promise<FeeController>;
  }
  override getDeployTransaction(
    _controller: PromiseOrValue<string>,
    _settings: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, _settings, overrides || {});
  }
  override attach(address: string): FeeController {
    return super.attach(address) as FeeController;
  }
  override connect(signer: Signer): FeeController__factory {
    return super.connect(signer) as FeeController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeControllerInterface {
    return new utils.Interface(_abi) as FeeControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeController {
    return new Contract(address, _abi, signerOrProvider) as FeeController;
  }
}
