/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Token, TokenInterface } from "../../contracts/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200181f3803806200181f83398181016040528101906200003791906200046c565b818181600390805190602001906200005192919062000303565b5080600490805190602001906200006a92919062000303565b5050506200008d62000081620000b260201b60201c565b620000ba60201b60201c565b620000aa336a084595161401484a0000006200018060201b60201c565b5050620005a3565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ea90620004d2565b60405180910390fd5b6200020760008383620002f960201b60201c565b80600260008282546200021b919062000521565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000272919062000521565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002d9919062000510565b60405180910390a3620002f560008383620002fe60201b60201c565b5050565b505050565b505050565b82805462000311906200054c565b90600052602060002090601f01602090048101928262000335576000855562000381565b82601f106200035057805160ff191683800117855562000381565b8280016001018555821562000381579182015b828111156200038057825182559160200191906001019062000363565b5b50905062000390919062000394565b5090565b5b80821115620003af57600081600090555060010162000395565b5090565b600082601f830112620003c4578081fd5b815160018060401b0380821115620003e157620003e06200058d565b5b601f1960405181603f83601f87011601168101915080821083831117156200040e576200040d6200058d565b5b816040528381526020925086838588010111156200042a578485fd5b8491505b838210156200044e5782828701015183838301015282820191506200042e565b838211156200045f57848385830101525b8094505050505092915050565b600080604083850312156200047f578182fd5b825160018060401b038082111562000495578384fd5b620004a386838701620003b3565b93506020850151915080821115620004b9578283fd5b50620004c885828601620003b3565b9150509250929050565b600060208252601f60208301527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006040830152606082019050919050565b600060208201905082825292915050565b600082198211156200054157634e487b7160e01b81526011600452602481fd5b828201905092915050565b600060028204905060018216806200056557607f821691505b602082108114156200058757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61126c80620005b36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190610e19565b60405180910390f35b61012760048036038101906101229190610dc2565b61038d565b6040516101349190610e06565b60405180910390f35b6101456103b0565b60405161015291906111a8565b60405180910390f35b61017560048036038101906101709190610d87565b6103ba565b6040516101829190610e06565b60405180910390f35b6101936103e9565b6040516101a091906111b9565b60405180910390f35b6101c360048036038101906101be9190610dc2565b6103f2565b6040516101d09190610e06565b60405180910390f35b6101f360048036038101906101ee9190610d33565b610429565b60405161020091906111a8565b60405180910390f35b610211610471565b005b61021b610485565b6040516102289190610ded565b60405180910390f35b6102396104af565b6040516102469190610e19565b60405180910390f35b61026960048036038101906102649190610dc2565b610541565b6040516102769190610e06565b60405180910390f35b61029960048036038101906102949190610dc2565b6105b8565b6040516102a69190610e06565b60405180910390f35b6102c960048036038101906102c49190610d55565b6105db565b6040516102d691906111a8565b60405180910390f35b6102f960048036038101906102f49190610d33565b610662565b005b60606003805461030a906111f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906111f7565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b6000806103986106e6565b90506103a58185856106ee565b600191505092915050565b6000600254905090565b6000806103c56106e6565b90506103d28582856108b9565b6103dd858585610945565b60019150509392505050565b60006012905090565b6000806103fd6106e6565b905061041e81858561040f85896105db565b61041991906111cd565b6106ee565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610479610bc6565b6104836000610c44565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104be906111f7565b80601f01602080910402602001604051908101604052809291908181526020018280546104ea906111f7565b80156105375780601f1061050c57610100808354040283529160200191610537565b820191906000526020600020905b81548152906001019060200180831161051a57829003601f168201915b5050505050905090565b60008061054c6106e6565b9050600061055a82866105db565b90508381101561059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690611144565b60405180910390fd5b6105ac82868684036106ee565b60019250505092915050565b6000806105c36106e6565b90506105d0818585610945565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61066a610bc6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190610ed5565b60405180910390fd5b6106e381610c44565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561075e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610755906110e0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590610f39565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108ac91906111a8565b60405180910390a3505050565b60006108c584846105db565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461093f5781811015610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610f9d565b60405180910390fd5b61093e84848484036106ee565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac9061107c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90610e71565b60405180910390fd5b610a30838383610d0a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad90610fdb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b4991906111cd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bad91906111a8565b60405180910390a3610bc0848484610d0f565b50505050565b610bce6106e6565b73ffffffffffffffffffffffffffffffffffffffff16610bec610485565b73ffffffffffffffffffffffffffffffffffffffff1614610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c399061103f565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b60008135905060018060a01b0381168114610d2e57600080fd5b919050565b600060208284031215610d44578081fd5b610d4d82610d14565b905092915050565b60008060408385031215610d67578081fd5b610d7083610d14565b9150610d7e60208401610d14565b90509250929050565b600080600060608486031215610d9b578081fd5b610da484610d14565b9250610db260208501610d14565b9150604084013590509250925092565b60008060408385031215610dd4578182fd5b610ddd83610d14565b9150602083013590509250929050565b600060208201905060018060a01b038316825292915050565b6000602082019050821515825292915050565b6000602080835283518082850152825b81811015610e4857828187010151604082870101528281019050610e29565b81811115610e595783604083870101525b506040601f19601f8301168501019250505092915050565b600060208252602360208301527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408301527f65737300000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252602660208301527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408301527f64647265737300000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252602260208301527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408301527f73730000000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252601d60208301527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006040830152606082019050919050565b600060208252602660208301527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408301527f616c616e636500000000000000000000000000000000000000000000000000006060830152608082019050919050565b6000602082526020808301527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082019050919050565b600060208252602560208301527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408301527f64726573730000000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252602460208301527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408301527f72657373000000000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208252602560208301527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408301527f207a65726f0000000000000000000000000000000000000000000000000000006060830152608082019050919050565b600060208201905082825292915050565b600060208201905060ff8316825292915050565b600082198211156111ec57634e487b7160e01b81526011600452602481fd5b828201905092915050565b6000600282049050600182168061120f57607f821691505b6020821081141561123057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202472759063f70eb96eaa4666b3bc1fc5506d3b489cca670d780a18af3874a9e664736f6c63430008020033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
