/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeSocket,
  BridgeSocketInterface,
} from "../../../contracts/bridgeSocket.sol/BridgeSocket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SendTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevFeeRemitance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentFeeRemitance",
        type: "address",
      },
    ],
    name: "feeRemitanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentFee",
        type: "uint256",
      },
    ],
    name: "feeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "currentFeeController",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentSettings",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentBridge",
        type: "address",
      },
    ],
    name: "socketUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract Ibridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
    ],
    name: "bridgeAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IfeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectedFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ownedRail",
            type: "bool",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRemitance",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSet",
            type: "bool",
          },
        ],
        internalType: "struct Ibridge.asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "getAssetLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDirectswapAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getForiegnAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativeAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedChainIDs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTransactionFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainTo",
        type: "uint256",
      },
    ],
    name: "getTransactionGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "isForiegnAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
    ],
    name: "isSupportedChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseSocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "updateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRemitance",
        type: "address",
      },
    ],
    name: "updateFeeRemitance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IfeeController",
        name: "_feecontroller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
      {
        internalType: "contract Ibridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateSocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "validAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6121a7806100856000396000f3fe60806040526004361061014b5760003560e01c80637b8aa54f116100b6578063d351e66e1161006f578063d351e66e146103b2578063dabc1cd6146103c5578063dfc7d488146103e5578063e06174e414610405578063e78cea9214610425578063f2fde38b146104455761014b565b80637b8aa54f146102fd5780637f9a79011461031d5780638bbd9d0e146103325780638da5cb5b146103525780639012c4a8146103705780639bff08d8146103905761014b565b80635c975abb116101085780635c975abb1461024a5780636999b3771461026457806369d52a611461029c578063715018a6146102b1578063749a1e73146102c85780637a87b621146102e85761014b565b806305e96863146101505780631bdcd2b7146101855780632014055d146101a857806330b8b2c6146101dd5780634b54dbef1461020a5780635153d4671461022a575b600080fd5b34801561015c57600080fd5b5061017061016b366004611c7a565b610465565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b5061019a610511565b60405190815260200161017c565b3480156101b457600080fd5b506101c86101c3366004611c7a565b610595565b6040805192835260208301919091520161017c565b3480156101e957600080fd5b506101fd6101f8366004611c7a565b6106f0565b60405161017c9190611fc2565b34801561021657600080fd5b5061019a610225366004611c96565b6108b0565b34801561023657600080fd5b50610170610245366004611eea565b610947565b34801561025657600080fd5b506007546101709060ff1681565b34801561027057600080fd5b50600354610284906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b3480156102a857600080fd5b5061019a6109ca565b3480156102bd57600080fd5b506102c6610a4f565b005b3480156102d457600080fd5b506101706102e3366004611c7a565b610a63565b3480156102f457600080fd5b5061019a610ba5565b34801561030957600080fd5b506102c6610318366004611df8565b610c29565b34801561032957600080fd5b506102c6610d33565b34801561033e57600080fd5b506102c661034d366004611c7a565b610dc4565b34801561035e57600080fd5b506001546001600160a01b0316610284565b34801561037c57600080fd5b506102c661038b366004611eea565b610ec9565b34801561039c57600080fd5b506103a5610f5b565b60405161017c9190611f4b565b6102c66103c0366004611cd6565b610fe0565b3480156103d157600080fd5b506101706103e0366004611c7a565b61137f565b3480156103f157600080fd5b5061019a610400366004611eea565b611389565b34801561041157600080fd5b50600254610284906001600160a01b031681565b34801561043157600080fd5b50600454610284906001600160a01b031681565b34801561045157600080fd5b506102c6610460366004611c7a565b6113c9565b600061046f611bed565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b1580156104b757600080fd5b505afa1580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef9190611e42565b90508061012001511561050657600191505061050c565b60009150505b919050565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b15801561055557600080fd5b505afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190611f02565b509250505090565b6000806105a0611bed565b6004805460405163f36dccf960e01b81526001600160a01b038781169382019390935291169063f36dccf9906024016101406040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190611e42565b905080610120015115610641578060200151816040015192509250506106eb565b6004805460405163a8b5b8ed60e01b81526001600160a01b038781169382019390935291169063a8b5b8ed906024016101406040518083038186803b15801561068957600080fd5b505afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c19190611e42565b9050806101200151156106e2578060200151816040015192509250506106eb565b60008092509250505b915091565b6106f8611bed565b610700611bed565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107809190611e42565b90508061012001511561079457905061050c565b6004805460405163a8b5b8ed60e01b81526001600160a01b038681169382019390935291169063a8b5b8ed906024016101406040518083038186803b1580156107dc57600080fd5b505afa1580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108149190611e42565b90508061012001511561082857905061050c565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b15801561087057600080fd5b505afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a89190611e42565b91505061050c565b600354604051630b81bf9960e11b81526001600160a01b03858116600483015284811660248301526044820184905260009216906317037f329060640160206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d9190611de0565b90505b9392505050565b60025460405163df73eb5160e01b8152600481018390526000916001600160a01b03169063df73eb519060240160206040518083038186803b15801561098c57600080fd5b505afa1580156109a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c49190611dc6565b92915050565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b158015610a0e57600080fd5b505afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190611f02565b50909250505090565b610a57611442565b610a61600061149c565b565b6000610a6d611bed565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b158015610ab557600080fd5b505afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190611e42565b905080610120015115610b0457600191505061050c565b6004805460405163a8b5b8ed60e01b81526001600160a01b038681169382019390935291169063a8b5b8ed906024016101406040518083038186803b158015610b4c57600080fd5b505afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190611e42565b905080610120015115610b9b57600191505061050c565b600091505061050c565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b158015610be957600080fd5b505afa158015610bfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c219190611f02565b935050505090565b610c31611442565b6001600160a01b038316151580610c5057506001600160a01b03821615155b80610c6357506001600160a01b03811615155b610ca65760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b600280546001600160a01b038481166001600160a01b03199283168117909355600380548783169084168117909155600480549286169290931682179092556007805460ff191690556040805192835260208301939093528183015290517f9f0eecb338db460766136d2e57743b5655a27a9c51ddc53f38ec1da401546ec19181900360600190a1505050565b610d3b611442565b6003546001600160a01b0316151580610d5e57506002546001600160a01b031615155b80610d7357506004546001600160a01b031615155b610db05760405162461bcd60e51b815260206004820152600e60248201526d1cdbd8dad95d081b9bdd081cd95d60921b6044820152606401610c9d565b6007805460ff19811660ff90911615179055565b610dcc611442565b6005546001600160a01b0382811691161415610e185760405162461bcd60e51b815260206004820152600b60248201526a185b1c9958591e481cd95d60aa1b6044820152606401610c9d565b6001600160a01b038116610e605760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964204164647265737360881b6044820152606401610c9d565b600554604080516001600160a01b03808516825290921660208301527f8ae7f019483f02a20195ce98e9905c37b4d7c17b49f012ef4a7b7d3ca04809b8910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b610ed1611442565b600a811115610f1a5760405162461bcd60e51b815260206004820152601560248201527456616c75652061626f7665206d61782076616c756560581b6044820152606401610c9d565b60065460408051918252602082018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a910160405180910390a1600655565b6002546040805162608fd560e41b815290516060926001600160a01b031691630608fd50916004808301926000929190829003018186803b158015610f9f57600080fd5b505afa158015610fb3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fdb9190810190611d1f565b905090565b610fe984610a63565b6110255760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908105cdcd95d609a1b6044820152606401610c9d565b6000806000611036878733886114ee565b9250925092508280156110495750600082115b6110895760405162461bcd60e51b8152602060048201526011602482015270496e737566696369656e742066756e647360781b6044820152606401610c9d565b61109382886117bc565b915060006110a088610465565b1561128d576001600160a01b038816611163576004546001600160a01b031663b5e8c0146110ce8585612096565b6040516001600160e01b031960e084901b168152600481018b90526001600160a01b03808d16602483015260448201889052891660648201526084016020604051808303818588803b15801561112357600080fd5b505af1158015611137573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061115c9190611de0565b9050611288565b6004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820185905289919082169063095ea7b390604401602060405180830381600087803b1580156111b657600080fd5b505af11580156111ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ee9190611dc6565b5060048054604051632d7a300560e21b81529182018a90526001600160a01b038b81166024840152604483018790528881166064840152169063b5e8c0149085906084016020604051808303818588803b15801561124b57600080fd5b505af115801561125f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112849190611de0565b9150505b611322565b6004805460405163b8ce670d60e01b81526001600160a01b038b81169382019390935260248101869052878316604482015291169063b8ce670d9084906064016020604051808303818588803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061131f9190611de0565b90505b604080518281526020810189905290810184905233906001600160a01b0387811691908b16907f32a8648ca22f84caa583d7622bbdd854b46f886f98651514e2d331e455e4f0659060600160405180910390a45050505050505050565b6000610b04611bed565b60006006546000148061139a575081155b156113a75750600061050c565b612710826006546113b891906120ce565b6113c291906120ae565b905061050c565b6113d1611442565b6001600160a01b0381166114365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c9d565b61143f8161149c565b50565b6001546001600160a01b03163314610a615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c9d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600354604051630b81bf9960e11b81526001600160a01b03848116600483015286811660248301526044820186905260009283928392839216906317037f329060640160206040518083038186803b15801561154957600080fd5b505afa15801561155d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115819190611de0565b90506001600160a01b0388166115dc5761159b8186612096565b34101580156115aa5750600034115b156115cb5760006115bb82346120ed565b6001955093509091506117b29050565b6000806000935093509350506117b2565b87856001600160a01b03821663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b15801561163357600080fd5b505afa158015611647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166b9190611de0565b101580156116795750813410155b156117a7576040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156116c057600080fd5b505afa1580156116d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f89190611de0565b905061170f6001600160a01b03831633308a6118b8565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b15801561175157600080fd5b505afa158015611765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117899190611de0565b9050600161179783836120ed565b85965096509650505050506117b2565b506000935083925090505b9450945094915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316638375bb396040518163ffffffff1660e01b815260040160206040518083038186803b15801561180d57600080fd5b505afa158015611821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118459190611de0565b9050600061271061185683876120ce565b61186091906120ae565b90506000612710600654838861187691906120ed565b61188091906120ce565b61188a91906120ae565b6005549091506118a4906001600160a01b03168683611929565b6118ae81876120ed565b9695505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119239085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119d7565b50505050565b6001600160a01b0383166119735760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610c9d565b6001600160a01b0382166119bd576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156119b7573d6000803e3d6000fd5b506119d2565b816119236001600160a01b0382168584611aa9565b505050565b6000611a2c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ad99092919063ffffffff16565b8051909150156119d25780806020019051810190611a4a9190611dc6565b6119d25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c9d565b6040516001600160a01b0383166024820152604481018290526119d290849063a9059cbb60e01b906064016118ec565b606061093d8484600085856001600160a01b0385163b611b3b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c9d565b600080866001600160a01b03168587604051611b579190611f2f565b60006040518083038185875af1925050503d8060008114611b94576040519150601f19603f3d011682016040523d82523d6000602084013e611b99565b606091505b5091509150611ba9828286611bb4565b979650505050505050565b60608315611bc3575081610940565b825115611bd35782518084602001fd5b8160405162461bcd60e51b8152600401610c9d9190611f8f565b60405180610140016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000151581525090565b805161050c8161215c565b8051801515811461050c57600080fd5b600060208284031215611c8b578081fd5b81356109408161215c565b600080600060608486031215611caa578182fd5b8335611cb58161215c565b92506020840135611cc58161215c565b929592945050506040919091013590565b60008060008060808587031215611ceb578081fd5b8435611cf68161215c565b935060208501359250604085013591506060850135611d148161215c565b939692955090935050565b60006020808385031215611d31578182fd5b825167ffffffffffffffff80821115611d48578384fd5b818501915085601f830112611d5b578384fd5b815181811115611d6d57611d6d612146565b8381029150611d7d848301612065565b8181528481019084860184860187018a1015611d97578788fd5b8795505b83861015611db9578051835260019590950194918601918601611d9b565b5098975050505050505050565b600060208284031215611dd7578081fd5b61094082611c6a565b600060208284031215611df1578081fd5b5051919050565b600080600060608486031215611e0c578283fd5b8335611e178161215c565b92506020840135611e278161215c565b91506040840135611e378161215c565b809150509250925092565b6000610140808385031215611e55578182fd5b611e5e81612065565b9050611e6983611c5f565b815260208301516020820152604083015160408201526060830151606082015260808301516080820152611e9f60a08401611c6a565b60a0820152611eb060c08401611c5f565b60c0820152611ec160e08401611c5f565b60e08201526101008381015190820152610120611edf818501611c6a565b908201529392505050565b600060208284031215611efb578081fd5b5035919050565b600080600060608486031215611f16578283fd5b8351925060208401519150604084015190509250925092565b60008251611f41818460208701612104565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611f8357835183529284019291840191600101611f67565b50909695505050505050565b6000602082528251806020840152611fae816040850160208701612104565b601f01601f19169190910160400192915050565b81516001600160a01b0316815261014081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015161200f60a084018215159052565b5060c083015161202a60c08401826001600160a01b03169052565b5060e083015161204560e08401826001600160a01b03169052565b506101008381015190830152610120928301511515929091019190915290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561208e5761208e612146565b604052919050565b600082198211156120a9576120a9612130565b500190565b6000826120c957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156120e8576120e8612130565b500290565b6000828210156120ff576120ff612130565b500390565b60005b8381101561211f578181015183820152602001612107565b838111156119235750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461143f57600080fdfea2646970667358221220a95438fb22043a4630b19cf3942f4b04ff959eac5fa31e0002493525bf6e47e864736f6c63430008020033";

type BridgeSocketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeSocketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeSocket__factory extends ContractFactory {
  constructor(...args: BridgeSocketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeSocket> {
    return super.deploy(overrides || {}) as Promise<BridgeSocket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeSocket {
    return super.attach(address) as BridgeSocket;
  }
  override connect(signer: Signer): BridgeSocket__factory {
    return super.connect(signer) as BridgeSocket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeSocketInterface {
    return new utils.Interface(_abi) as BridgeSocketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeSocket {
    return new Contract(address, _abi, signerOrProvider) as BridgeSocket;
  }
}
