/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeSocket,
  BridgeSocketInterface,
} from "../../../contracts/bridgeSocket.sol/BridgeSocket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SendTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevFeeRemitance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentFeeRemitance",
        type: "address",
      },
    ],
    name: "feeRemitanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentFee",
        type: "uint256",
      },
    ],
    name: "feeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "currentFeeController",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentSettings",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentBridge",
        type: "address",
      },
    ],
    name: "socketUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract Ibridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
    ],
    name: "bridgeAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IfeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRemitance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectedFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ownedRail",
            type: "bool",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRemitance",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSet",
            type: "bool",
          },
        ],
        internalType: "struct Ibridge.asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "getAssetLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDirectswapAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getForiegnAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativeAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedChainIDs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTransactionFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainTo",
        type: "uint256",
      },
    ],
    name: "getTransactionGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "isForiegnAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
    ],
    name: "isSupportedChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseSocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "updateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRemitance",
        type: "address",
      },
    ],
    name: "updateFeeRemitance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IfeeController",
        name: "_feecontroller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
      {
        internalType: "contract Ibridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateSocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "validAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612256806100856000396000f3fe6080604052600436106101815760003560e01c80637b8aa54f116100d1578063a001ecdd1161008a578063dfc7d48811610064578063dfc7d48814610451578063e06174e414610471578063e78cea9214610491578063f2fde38b146104b157610181565b8063a001ecdd14610408578063d351e66e1461041e578063dabc1cd61461043157610181565b80637b8aa54f146103535780637f9a7901146103735780638bbd9d0e146103885780638da5cb5b146103a85780639012c4a8146103c65780639bff08d8146103e657610181565b806357b720221161013e57806369d52a611161011857806369d52a61146102f2578063715018a614610307578063749a1e731461031e5780637a87b6211461033e57610181565b806357b72022146102805780635c975abb146102b85780636999b377146102d257610181565b806305e96863146101865780631bdcd2b7146101bb5780632014055d146101de57806330b8b2c6146102135780634b54dbef146102405780635153d46714610260575b600080fd5b34801561019257600080fd5b506101a66101a1366004611d29565b6104d1565b60405190151581526020015b60405180910390f35b3480156101c757600080fd5b506101d061057d565b6040519081526020016101b2565b3480156101ea57600080fd5b506101fe6101f9366004611d29565b610601565b604080519283526020830191909152016101b2565b34801561021f57600080fd5b5061023361022e366004611d29565b61075c565b6040516101b29190612071565b34801561024c57600080fd5b506101d061025b366004611d45565b61091c565b34801561026c57600080fd5b506101a661027b366004611f99565b6109b3565b34801561028c57600080fd5b506005546102a0906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b3480156102c457600080fd5b506007546101a69060ff1681565b3480156102de57600080fd5b506003546102a0906001600160a01b031681565b3480156102fe57600080fd5b506101d0610a36565b34801561031357600080fd5b5061031c610abb565b005b34801561032a57600080fd5b506101a6610339366004611d29565b610acf565b34801561034a57600080fd5b506101d0610c11565b34801561035f57600080fd5b5061031c61036e366004611ea7565b610c95565b34801561037f57600080fd5b5061031c610d9f565b34801561039457600080fd5b5061031c6103a3366004611d29565b610e30565b3480156103b457600080fd5b506001546001600160a01b03166102a0565b3480156103d257600080fd5b5061031c6103e1366004611f99565b610f35565b3480156103f257600080fd5b506103fb610fc7565b6040516101b29190611ffa565b34801561041457600080fd5b506101d060065481565b61031c61042c366004611d85565b61104c565b34801561043d57600080fd5b506101a661044c366004611d29565b61142e565b34801561045d57600080fd5b506101d061046c366004611f99565b611438565b34801561047d57600080fd5b506002546102a0906001600160a01b031681565b34801561049d57600080fd5b506004546102a0906001600160a01b031681565b3480156104bd57600080fd5b5061031c6104cc366004611d29565b611478565b60006104db611c9c565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b15801561052357600080fd5b505afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611ef1565b905080610120015115610572576001915050610578565b60009150505b919050565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b1580156105c157600080fd5b505afa1580156105d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f99190611fb1565b509250505090565b60008061060c611c9c565b6004805460405163f36dccf960e01b81526001600160a01b038781169382019390935291169063f36dccf9906024016101406040518083038186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190611ef1565b9050806101200151156106ad57806020015181604001519250925050610757565b6004805460405163a8b5b8ed60e01b81526001600160a01b038781169382019390935291169063a8b5b8ed906024016101406040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d9190611ef1565b90508061012001511561074e57806020015181604001519250925050610757565b60008092509250505b915091565b610764611c9c565b61076c611c9c565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190611ef1565b905080610120015115610800579050610578565b6004805460405163a8b5b8ed60e01b81526001600160a01b038681169382019390935291169063a8b5b8ed906024016101406040518083038186803b15801561084857600080fd5b505afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108809190611ef1565b905080610120015115610894579050610578565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b1580156108dc57600080fd5b505afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190611ef1565b915050610578565b600354604051630b81bf9960e11b81526001600160a01b03858116600483015284811660248301526044820184905260009216906317037f329060640160206040518083038186803b15801561097157600080fd5b505afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190611e8f565b90505b9392505050565b60025460405163df73eb5160e01b8152600481018390526000916001600160a01b03169063df73eb519060240160206040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611e75565b92915050565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b158015610a7a57600080fd5b505afa158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab29190611fb1565b50909250505090565b610ac36114f1565b610acd600061154b565b565b6000610ad9611c9c565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b158015610b2157600080fd5b505afa158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b599190611ef1565b905080610120015115610b70576001915050610578565b6004805460405163a8b5b8ed60e01b81526001600160a01b038681169382019390935291169063a8b5b8ed906024016101406040518083038186803b158015610bb857600080fd5b505afa158015610bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf09190611ef1565b905080610120015115610c07576001915050610578565b6000915050610578565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b158015610c5557600080fd5b505afa158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d9190611fb1565b935050505090565b610c9d6114f1565b6001600160a01b038316151580610cbc57506001600160a01b03821615155b80610ccf57506001600160a01b03811615155b610d125760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b600280546001600160a01b038481166001600160a01b03199283168117909355600380548783169084168117909155600480549286169290931682179092556007805460ff191690556040805192835260208301939093528183015290517f9f0eecb338db460766136d2e57743b5655a27a9c51ddc53f38ec1da401546ec19181900360600190a1505050565b610da76114f1565b6003546001600160a01b0316151580610dca57506002546001600160a01b031615155b80610ddf57506004546001600160a01b031615155b610e1c5760405162461bcd60e51b815260206004820152600e60248201526d1cdbd8dad95d081b9bdd081cd95d60921b6044820152606401610d09565b6007805460ff19811660ff90911615179055565b610e386114f1565b6005546001600160a01b0382811691161415610e845760405162461bcd60e51b815260206004820152600b60248201526a185b1c9958591e481cd95d60aa1b6044820152606401610d09565b6001600160a01b038116610ecc5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964204164647265737360881b6044820152606401610d09565b600554604080516001600160a01b03808516825290921660208301527f8ae7f019483f02a20195ce98e9905c37b4d7c17b49f012ef4a7b7d3ca04809b8910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b610f3d6114f1565b600a811115610f865760405162461bcd60e51b815260206004820152601560248201527456616c75652061626f7665206d61782076616c756560581b6044820152606401610d09565b60065460408051918252602082018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a910160405180910390a1600655565b6002546040805162608fd560e41b815290516060926001600160a01b031691630608fd50916004808301926000929190829003018186803b15801561100b57600080fd5b505afa15801561101f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110479190810190611dce565b905090565b60075460ff161561108f5760405162461bcd60e51b815260206004820152600d60248201526c14dbd8dad95d081c185d5cd959609a1b6044820152606401610d09565b61109884610acf565b6110d45760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908105cdcd95d609a1b6044820152606401610d09565b60008060006110e58787338861159d565b9250925092508280156110f85750600082115b6111385760405162461bcd60e51b8152602060048201526011602482015270496e737566696369656e742066756e647360781b6044820152606401610d09565b611142828861186b565b9150600061114f886104d1565b1561133c576001600160a01b038816611212576004546001600160a01b031663b5e8c01461117d8585612145565b6040516001600160e01b031960e084901b168152600481018b90526001600160a01b03808d16602483015260448201889052891660648201526084016020604051808303818588803b1580156111d257600080fd5b505af11580156111e6573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061120b9190611e8f565b9050611337565b6004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820185905289919082169063095ea7b390604401602060405180830381600087803b15801561126557600080fd5b505af1158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d9190611e75565b5060048054604051632d7a300560e21b81529182018a90526001600160a01b038b81166024840152604483018790528881166064840152169063b5e8c0149085906084016020604051808303818588803b1580156112fa57600080fd5b505af115801561130e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906113339190611e8f565b9150505b6113d1565b6004805460405163b8ce670d60e01b81526001600160a01b038b81169382019390935260248101869052878316604482015291169063b8ce670d9084906064016020604051808303818588803b15801561139557600080fd5b505af11580156113a9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906113ce9190611e8f565b90505b604080518281526020810189905290810184905233906001600160a01b0387811691908b16907f32a8648ca22f84caa583d7622bbdd854b46f886f98651514e2d331e455e4f0659060600160405180910390a45050505050505050565b6000610b70611c9c565b600060065460001480611449575081155b1561145657506000610578565b61271082600654611467919061217d565b611471919061215d565b9050610578565b6114806114f1565b6001600160a01b0381166114e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d09565b6114ee8161154b565b50565b6001546001600160a01b03163314610acd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d09565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600354604051630b81bf9960e11b81526001600160a01b03848116600483015286811660248301526044820186905260009283928392839216906317037f329060640160206040518083038186803b1580156115f857600080fd5b505afa15801561160c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116309190611e8f565b90506001600160a01b03881661168b5761164a8186612145565b34101580156116595750600034115b1561167a57600061166a823461219c565b6001955093509091506118619050565b600080600093509350935050611861565b87856001600160a01b03821663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b1580156116e257600080fd5b505afa1580156116f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171a9190611e8f565b101580156117285750813410155b15611856576040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561176f57600080fd5b505afa158015611783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a79190611e8f565b90506117be6001600160a01b03831633308a611967565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b15801561180057600080fd5b505afa158015611814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118389190611e8f565b90506001611846838361219c565b8596509650965050505050611861565b506000935083925090505b9450945094915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316638375bb396040518163ffffffff1660e01b815260040160206040518083038186803b1580156118bc57600080fd5b505afa1580156118d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f49190611e8f565b90506000612710611905838761217d565b61190f919061215d565b905060006127106006548388611925919061219c565b61192f919061217d565b611939919061215d565b600554909150611953906001600160a01b031686836119d8565b61195d818761219c565b9695505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119d29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a86565b50505050565b6001600160a01b038316611a225760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610d09565b6001600160a01b038216611a6c576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015611a66573d6000803e3d6000fd5b50611a81565b816119d26001600160a01b0382168584611b58565b505050565b6000611adb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b889092919063ffffffff16565b805190915015611a815780806020019051810190611af99190611e75565b611a815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d09565b6040516001600160a01b038316602482015260448101829052611a8190849063a9059cbb60e01b9060640161199b565b60606109a98484600085856001600160a01b0385163b611bea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d09565b600080866001600160a01b03168587604051611c069190611fde565b60006040518083038185875af1925050503d8060008114611c43576040519150601f19603f3d011682016040523d82523d6000602084013e611c48565b606091505b5091509150611c58828286611c63565b979650505050505050565b60608315611c725750816109ac565b825115611c825782518084602001fd5b8160405162461bcd60e51b8152600401610d09919061203e565b60405180610140016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000151581525090565b80516105788161220b565b8051801515811461057857600080fd5b600060208284031215611d3a578081fd5b81356109ac8161220b565b600080600060608486031215611d59578182fd5b8335611d648161220b565b92506020840135611d748161220b565b929592945050506040919091013590565b60008060008060808587031215611d9a578081fd5b8435611da58161220b565b935060208501359250604085013591506060850135611dc38161220b565b939692955090935050565b60006020808385031215611de0578182fd5b825167ffffffffffffffff80821115611df7578384fd5b818501915085601f830112611e0a578384fd5b815181811115611e1c57611e1c6121f5565b8381029150611e2c848301612114565b8181528481019084860184860187018a1015611e46578788fd5b8795505b83861015611e68578051835260019590950194918601918601611e4a565b5098975050505050505050565b600060208284031215611e86578081fd5b6109ac82611d19565b600060208284031215611ea0578081fd5b5051919050565b600080600060608486031215611ebb578283fd5b8335611ec68161220b565b92506020840135611ed68161220b565b91506040840135611ee68161220b565b809150509250925092565b6000610140808385031215611f04578182fd5b611f0d81612114565b9050611f1883611d0e565b815260208301516020820152604083015160408201526060830151606082015260808301516080820152611f4e60a08401611d19565b60a0820152611f5f60c08401611d0e565b60c0820152611f7060e08401611d0e565b60e08201526101008381015190820152610120611f8e818501611d19565b908201529392505050565b600060208284031215611faa578081fd5b5035919050565b600080600060608486031215611fc5578283fd5b8351925060208401519150604084015190509250925092565b60008251611ff08184602087016121b3565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561203257835183529284019291840191600101612016565b50909695505050505050565b600060208252825180602084015261205d8160408501602087016121b3565b601f01601f19169190910160400192915050565b81516001600160a01b0316815261014081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516120be60a084018215159052565b5060c08301516120d960c08401826001600160a01b03169052565b5060e08301516120f460e08401826001600160a01b03169052565b506101008381015190830152610120928301511515929091019190915290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561213d5761213d6121f5565b604052919050565b60008219821115612158576121586121df565b500190565b60008261217857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612197576121976121df565b500290565b6000828210156121ae576121ae6121df565b500390565b60005b838110156121ce5781810151838201526020016121b6565b838111156119d25750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146114ee57600080fdfea2646970667358221220f82a67d71659c62ab4e0feee135c331a0c4e99623ded01a6e25ae112a520428764736f6c63430008020033";

type BridgeSocketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeSocketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeSocket__factory extends ContractFactory {
  constructor(...args: BridgeSocketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeSocket> {
    return super.deploy(overrides || {}) as Promise<BridgeSocket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeSocket {
    return super.attach(address) as BridgeSocket;
  }
  override connect(signer: Signer): BridgeSocket__factory {
    return super.connect(signer) as BridgeSocket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeSocketInterface {
    return new utils.Interface(_abi) as BridgeSocketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeSocket {
    return new Contract(address, _abi, signerOrProvider) as BridgeSocket;
  }
}
