/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeSocket,
  BridgeSocketInterface,
} from "../../../contracts/bridgeSocket.sol/BridgeSocket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sendAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SendTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "prevFeeRemitance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentFeeRemitance",
        type: "address",
      },
    ],
    name: "feeRemitanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "prevFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentFee",
        type: "uint256",
      },
    ],
    name: "feeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "currentFeeController",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentSettings",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currentBridge",
        type: "address",
      },
    ],
    name: "socketUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract Ibridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
    ],
    name: "bridgeAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeController",
    outputs: [
      {
        internalType: "contract IfeeController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRemitance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collectedFees",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "ownedRail",
            type: "bool",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRemitance",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSet",
            type: "bool",
          },
        ],
        internalType: "struct Ibridge.asset",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "getAssetLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDirectswapAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getForiegnAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNativeAssetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedChainIDs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTransactionFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainTo",
        type: "uint256",
      },
    ],
    name: "getTransactionGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "isForiegnAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
    ],
    name: "isSupportedChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseSocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        internalType: "contract Isettings",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "updateFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRemitance",
        type: "address",
      },
    ],
    name: "updateFeeRemitance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IfeeController",
        name: "_feecontroller",
        type: "address",
      },
      {
        internalType: "contract Isettings",
        name: "_settings",
        type: "address",
      },
      {
        internalType: "contract Ibridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateSocket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
    ],
    name: "validAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6121e2806100856000396000f3fe6080604052600436106101665760003560e01c80637a87b621116100d15780639bff08d81161008a578063dfc7d48811610064578063dfc7d48814610420578063e06174e414610440578063e78cea9214610460578063f2fde38b1461048057610166565b80639bff08d8146103cb578063d351e66e146103ed578063dabc1cd61461040057610166565b80637a87b621146103235780637b8aa54f146103385780637f9a7901146103585780638bbd9d0e1461036d5780638da5cb5b1461038d5780639012c4a8146103ab57610166565b806357b720221161012357806357b72022146102655780635c975abb1461029d5780636999b377146102b757806369d52a61146102d7578063715018a6146102ec578063749a1e731461030357610166565b806305e968631461016b5780631bdcd2b7146101a05780632014055d146101c357806330b8b2c6146101f85780634b54dbef146102255780635153d46714610245575b600080fd5b34801561017757600080fd5b5061018b610186366004611cb5565b6104a0565b60405190151581526020015b60405180910390f35b3480156101ac57600080fd5b506101b561054c565b604051908152602001610197565b3480156101cf57600080fd5b506101e36101de366004611cb5565b6105d0565b60408051928352602083019190915201610197565b34801561020457600080fd5b50610218610213366004611cb5565b61072b565b6040516101979190611ffd565b34801561023157600080fd5b506101b5610240366004611cd1565b6108eb565b34801561025157600080fd5b5061018b610260366004611f25565b610982565b34801561027157600080fd5b50600554610285906001600160a01b031681565b6040516001600160a01b039091168152602001610197565b3480156102a957600080fd5b5060075461018b9060ff1681565b3480156102c357600080fd5b50600354610285906001600160a01b031681565b3480156102e357600080fd5b506101b5610a05565b3480156102f857600080fd5b50610301610a8a565b005b34801561030f57600080fd5b5061018b61031e366004611cb5565b610a9e565b34801561032f57600080fd5b506101b5610be0565b34801561034457600080fd5b50610301610353366004611e33565b610c64565b34801561036457600080fd5b50610301610d6e565b34801561037957600080fd5b50610301610388366004611cb5565b610dff565b34801561039957600080fd5b506001546001600160a01b0316610285565b3480156103b757600080fd5b506103016103c6366004611f25565b610f04565b3480156103d757600080fd5b506103e0610f96565b6040516101979190611f86565b6103016103fb366004611d11565b61101b565b34801561040c57600080fd5b5061018b61041b366004611cb5565b6113ba565b34801561042c57600080fd5b506101b561043b366004611f25565b6113c4565b34801561044c57600080fd5b50600254610285906001600160a01b031681565b34801561046c57600080fd5b50600454610285906001600160a01b031681565b34801561048c57600080fd5b5061030161049b366004611cb5565b611404565b60006104aa611c28565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b1580156104f257600080fd5b505afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a9190611e7d565b905080610120015115610541576001915050610547565b60009150505b919050565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b15801561059057600080fd5b505afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611f3d565b509250505090565b6000806105db611c28565b6004805460405163f36dccf960e01b81526001600160a01b038781169382019390935291169063f36dccf9906024016101406040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190611e7d565b90508061012001511561067c57806020015181604001519250925050610726565b6004805460405163a8b5b8ed60e01b81526001600160a01b038781169382019390935291169063a8b5b8ed906024016101406040518083038186803b1580156106c457600080fd5b505afa1580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190611e7d565b90508061012001511561071d57806020015181604001519250925050610726565b60008092509250505b915091565b610733611c28565b61073b611c28565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b15801561078357600080fd5b505afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190611e7d565b9050806101200151156107cf579050610547565b6004805460405163a8b5b8ed60e01b81526001600160a01b038681169382019390935291169063a8b5b8ed906024016101406040518083038186803b15801561081757600080fd5b505afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190611e7d565b905080610120015115610863579050610547565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b1580156108ab57600080fd5b505afa1580156108bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e39190611e7d565b915050610547565b600354604051630b81bf9960e11b81526001600160a01b03858116600483015284811660248301526044820184905260009216906317037f329060640160206040518083038186803b15801561094057600080fd5b505afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109789190611e1b565b90505b9392505050565b60025460405163df73eb5160e01b8152600481018390526000916001600160a01b03169063df73eb519060240160206040518083038186803b1580156109c757600080fd5b505afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190611e01565b92915050565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b158015610a4957600080fd5b505afa158015610a5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a819190611f3d565b50909250505090565b610a9261147d565b610a9c60006114d7565b565b6000610aa8611c28565b6004805460405163f36dccf960e01b81526001600160a01b038681169382019390935291169063f36dccf9906024016101406040518083038186803b158015610af057600080fd5b505afa158015610b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b289190611e7d565b905080610120015115610b3f576001915050610547565b6004805460405163a8b5b8ed60e01b81526001600160a01b038681169382019390935291169063a8b5b8ed906024016101406040518083038186803b158015610b8757600080fd5b505afa158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf9190611e7d565b905080610120015115610bd6576001915050610547565b6000915050610547565b600480546040805163a0aead4d60e01b8152905160009384936001600160a01b03169263a0aead4d9281830192606092829003018186803b158015610c2457600080fd5b505afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190611f3d565b935050505090565b610c6c61147d565b6001600160a01b038316151580610c8b57506001600160a01b03821615155b80610c9e57506001600160a01b03811615155b610ce15760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b600280546001600160a01b038481166001600160a01b03199283168117909355600380548783169084168117909155600480549286169290931682179092556007805460ff191690556040805192835260208301939093528183015290517f9f0eecb338db460766136d2e57743b5655a27a9c51ddc53f38ec1da401546ec19181900360600190a1505050565b610d7661147d565b6003546001600160a01b0316151580610d9957506002546001600160a01b031615155b80610dae57506004546001600160a01b031615155b610deb5760405162461bcd60e51b815260206004820152600e60248201526d1cdbd8dad95d081b9bdd081cd95d60921b6044820152606401610cd8565b6007805460ff19811660ff90911615179055565b610e0761147d565b6005546001600160a01b0382811691161415610e535760405162461bcd60e51b815260206004820152600b60248201526a185b1c9958591e481cd95d60aa1b6044820152606401610cd8565b6001600160a01b038116610e9b5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964204164647265737360881b6044820152606401610cd8565b600554604080516001600160a01b03808516825290921660208301527f8ae7f019483f02a20195ce98e9905c37b4d7c17b49f012ef4a7b7d3ca04809b8910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b610f0c61147d565b600a811115610f555760405162461bcd60e51b815260206004820152601560248201527456616c75652061626f7665206d61782076616c756560581b6044820152606401610cd8565b60065460408051918252602082018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a910160405180910390a1600655565b6002546040805162608fd560e41b815290516060926001600160a01b031691630608fd50916004808301926000929190829003018186803b158015610fda57600080fd5b505afa158015610fee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110169190810190611d5a565b905090565b61102484610a9e565b6110605760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908105cdcd95d609a1b6044820152606401610cd8565b600080600061107187873388611529565b9250925092508280156110845750600082115b6110c45760405162461bcd60e51b8152602060048201526011602482015270496e737566696369656e742066756e647360781b6044820152606401610cd8565b6110ce82886117f7565b915060006110db886104a0565b156112c8576001600160a01b03881661119e576004546001600160a01b031663b5e8c01461110985856120d1565b6040516001600160e01b031960e084901b168152600481018b90526001600160a01b03808d16602483015260448201889052891660648201526084016020604051808303818588803b15801561115e57600080fd5b505af1158015611172573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906111979190611e1b565b90506112c3565b6004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820185905289919082169063095ea7b390604401602060405180830381600087803b1580156111f157600080fd5b505af1158015611205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112299190611e01565b5060048054604051632d7a300560e21b81529182018a90526001600160a01b038b81166024840152604483018790528881166064840152169063b5e8c0149085906084016020604051808303818588803b15801561128657600080fd5b505af115801561129a573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112bf9190611e1b565b9150505b61135d565b6004805460405163b8ce670d60e01b81526001600160a01b038b81169382019390935260248101869052878316604482015291169063b8ce670d9084906064016020604051808303818588803b15801561132157600080fd5b505af1158015611335573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061135a9190611e1b565b90505b604080518281526020810189905290810184905233906001600160a01b0387811691908b16907f32a8648ca22f84caa583d7622bbdd854b46f886f98651514e2d331e455e4f0659060600160405180910390a45050505050505050565b6000610b3f611c28565b6000600654600014806113d5575081155b156113e257506000610547565b612710826006546113f39190612109565b6113fd91906120e9565b9050610547565b61140c61147d565b6001600160a01b0381166114715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610cd8565b61147a816114d7565b50565b6001546001600160a01b03163314610a9c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610cd8565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600354604051630b81bf9960e11b81526001600160a01b03848116600483015286811660248301526044820186905260009283928392839216906317037f329060640160206040518083038186803b15801561158457600080fd5b505afa158015611598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bc9190611e1b565b90506001600160a01b038816611617576115d681866120d1565b34101580156115e55750600034115b156116065760006115f68234612128565b6001955093509091506117ed9050565b6000806000935093509350506117ed565b87856001600160a01b03821663dd62ed3e336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260440160206040518083038186803b15801561166e57600080fd5b505afa158015611682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a69190611e1b565b101580156116b45750813410155b156117e2576040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156116fb57600080fd5b505afa15801561170f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117339190611e1b565b905061174a6001600160a01b03831633308a6118f3565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a082319060240160206040518083038186803b15801561178c57600080fd5b505afa1580156117a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c49190611e1b565b905060016117d28383612128565b85965096509650505050506117ed565b506000935083925090505b9450945094915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b0316638375bb396040518163ffffffff1660e01b815260040160206040518083038186803b15801561184857600080fd5b505afa15801561185c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118809190611e1b565b905060006127106118918387612109565b61189b91906120e9565b9050600061271060065483886118b19190612128565b6118bb9190612109565b6118c591906120e9565b6005549091506118df906001600160a01b03168683611964565b6118e98187612128565b9695505050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261195e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a12565b50505050565b6001600160a01b0383166119ae5760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610cd8565b6001600160a01b0382166119f8576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156119f2573d6000803e3d6000fd5b50611a0d565b8161195e6001600160a01b0382168584611ae4565b505050565b6000611a67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b149092919063ffffffff16565b805190915015611a0d5780806020019051810190611a859190611e01565b611a0d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610cd8565b6040516001600160a01b038316602482015260448101829052611a0d90849063a9059cbb60e01b90606401611927565b60606109788484600085856001600160a01b0385163b611b765760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610cd8565b600080866001600160a01b03168587604051611b929190611f6a565b60006040518083038185875af1925050503d8060008114611bcf576040519150601f19603f3d011682016040523d82523d6000602084013e611bd4565b606091505b5091509150611be4828286611bef565b979650505050505050565b60608315611bfe57508161097b565b825115611c0e5782518084602001fd5b8160405162461bcd60e51b8152600401610cd89190611fca565b60405180610140016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000151581525090565b805161054781612197565b8051801515811461054757600080fd5b600060208284031215611cc6578081fd5b813561097b81612197565b600080600060608486031215611ce5578182fd5b8335611cf081612197565b92506020840135611d0081612197565b929592945050506040919091013590565b60008060008060808587031215611d26578081fd5b8435611d3181612197565b935060208501359250604085013591506060850135611d4f81612197565b939692955090935050565b60006020808385031215611d6c578182fd5b825167ffffffffffffffff80821115611d83578384fd5b818501915085601f830112611d96578384fd5b815181811115611da857611da8612181565b8381029150611db88483016120a0565b8181528481019084860184860187018a1015611dd2578788fd5b8795505b83861015611df4578051835260019590950194918601918601611dd6565b5098975050505050505050565b600060208284031215611e12578081fd5b61097b82611ca5565b600060208284031215611e2c578081fd5b5051919050565b600080600060608486031215611e47578283fd5b8335611e5281612197565b92506020840135611e6281612197565b91506040840135611e7281612197565b809150509250925092565b6000610140808385031215611e90578182fd5b611e99816120a0565b9050611ea483611c9a565b815260208301516020820152604083015160408201526060830151606082015260808301516080820152611eda60a08401611ca5565b60a0820152611eeb60c08401611c9a565b60c0820152611efc60e08401611c9a565b60e08201526101008381015190820152610120611f1a818501611ca5565b908201529392505050565b600060208284031215611f36578081fd5b5035919050565b600080600060608486031215611f51578283fd5b8351925060208401519150604084015190509250925092565b60008251611f7c81846020870161213f565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611fbe57835183529284019291840191600101611fa2565b50909695505050505050565b6000602082528251806020840152611fe981604085016020870161213f565b601f01601f19169190910160400192915050565b81516001600160a01b0316815261014081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015161204a60a084018215159052565b5060c083015161206560c08401826001600160a01b03169052565b5060e083015161208060e08401826001600160a01b03169052565b506101008381015190830152610120928301511515929091019190915290565b604051601f8201601f1916810167ffffffffffffffff811182821017156120c9576120c9612181565b604052919050565b600082198211156120e4576120e461216b565b500190565b60008261210457634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156121235761212361216b565b500290565b60008282101561213a5761213a61216b565b500390565b60005b8381101561215a578181015183820152602001612142565b8381111561195e5750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461147a57600080fdfea26469706673582212203b758c169f6e8e26f6434dadd5e8c3f4ded65259df54cc71010b0e6fe5c1ded064736f6c63430008020033";

type BridgeSocketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeSocketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeSocket__factory extends ContractFactory {
  constructor(...args: BridgeSocketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeSocket> {
    return super.deploy(overrides || {}) as Promise<BridgeSocket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeSocket {
    return super.attach(address) as BridgeSocket;
  }
  override connect(signer: Signer): BridgeSocket__factory {
    return super.connect(signer) as BridgeSocket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeSocketInterface {
    return new utils.Interface(_abi) as BridgeSocketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeSocket {
    return new Contract(address, _abi, signerOrProvider) as BridgeSocket;
  }
}
