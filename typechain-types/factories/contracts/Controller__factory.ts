/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Controller,
  ControllerInterface,
} from "../../contracts/Controller";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "OracleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "OracleRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    name: "RegistrarAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    name: "RegistrarRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "addOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registrar",
        type: "address",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "addRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
    ],
    name: "addValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "adminsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRegistrar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oraclesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registrars",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrarsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d3362000030565b6200002a33600162000080565b62000425565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200008a62000379565b801562000178576001600160a01b03821660009081526001602052604090205460ff1615620000f35760405162461bcd60e51b815260206004820152601060248201526f30b63932b0b23c9030b71030b236b4b760811b60448201526064015b60405180910390fd5b6040516001600160a01b038316907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a2600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0384161790556200034e565b6001600160a01b03821660009081526001602052604090205460ff16620001d15760405162461bcd60e51b815260206004820152600c60248201526b3737ba1030b71030b236b4b760a11b6044820152606401620000ea565b60065460005b818110156200031757836001600160a01b0316600682815481106200020c57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156200030257600662000237600184620003d7565b815481106200025657634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600680546001600160a01b0390921691839081106200029157634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480620002df57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190555b806200030e81620003f1565b915050620001d7565b506040516001600160a01b038416907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a2505b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b6000546001600160a01b03163314620003d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620000ea565b565b600082821015620003ec57620003ec6200040f565b500390565b60006000198214156200040857620004086200040f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6111db80620004356000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c8063715018a6116100ad578063a97e5c9311610071578063a97e5c931461024a578063d5db72eb1461026d578063ed612f8c14610290578063f2fde38b14610298578063facd743b146102ab57610120565b8063715018a61461020357806376f709001461020b5780638da5cb5b1461021357806396e3722714610224578063a4230bd51461023757610120565b806321a3fb85116100f457806321a3fb851461018257806324d7806c1461019757806335aa2e44146101ca5780635b69a7d8146101dd578063689b340b146101f057610120565b80623f45831461012557806312f838321461013c57806314bfd6d0146101675780631c41e5a11461017a575b600080fd5b6008545b6040519081526020015b60405180910390f35b61014f61014a366004611128565b6102ce565b6040516001600160a01b039091168152602001610133565b61014f610175366004611128565b6102f8565b600654610129565b6101956101903660046110ee565b610308565b005b6101ba6101a53660046110cd565b60016020526000908152604090205460ff1681565b6040519015158152602001610133565b61014f6101d8366004611128565b610635565b61014f6101eb366004611128565b610645565b6101956101fe3660046110ee565b610655565b610195610979565b600754610129565b6000546001600160a01b031661014f565b6101956102323660046110ee565b61098d565b6101956102453660046110ee565b610cac565b6101ba6102583660046110cd565b60036020526000908152604090205460ff1681565b6101ba61027b3660046110cd565b60026020526000908152604090205460ff1681565b600554610129565b6101956102a63660046110cd565b610f8e565b6101ba6102b93660046110cd565b60046020526000908152604090205460ff1681565b600881815481106102de57600080fd5b6000918252602090912001546001600160a01b0316905081565b600681815481106102de57600080fd5b3360009081526001602052604090205460ff168061033057506000546001600160a01b031633145b6103555760405162461bcd60e51b815260040161034c90611140565b60405180910390fd5b801561043e576001600160a01b03821660009081526004602052604090205460ff16156103ba5760405162461bcd60e51b815260206004820152601360248201527230b63932b0b23c9030902b30b634b230ba37b960691b604482015260640161034c565b6040516001600160a01b038316907fe366c1c0452ed8eec96861e9e54141ebff23c9ec89fe27b996b45f5ec388498790600090a2600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03841617905561060a565b6001600160a01b03821660009081526004602052604090205460ff166104985760405162461bcd60e51b815260206004820152600f60248201526e3737ba1030902b30b634b230ba37b960891b604482015260640161034c565b60055460005b818110156105d357836001600160a01b0316600582815481106104d157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156105c15760056104f960018461115d565b8154811061051757634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600580546001600160a01b03909216918390811061055157634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600580548061059e57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190555b806105cb81611174565b91505061049e565b506040516001600160a01b038416907fe1434e25d6611e0db941968fdc97811c982ac1602e951637d206f5fdda9dd8f190600090a2505b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b600581815481106102de57600080fd5b600781815481106102de57600080fd5b3360009081526001602052604090205460ff168061067d57506000546001600160a01b031633145b6106995760405162461bcd60e51b815260040161034c90611140565b8015610782576001600160a01b03821660009081526002602052604090205460ff16156106fe5760405162461bcd60e51b815260206004820152601360248201527230b63932b0b23c9030902932b3b4b9ba3932b960691b604482015260640161034c565b6040516001600160a01b038316907f5c38ce8ff8864a9d2a5ff5aec72a88770e38d181dea59173fde1247cdaa1aea390600090a2600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319166001600160a01b03841617905561094e565b6008546001600160a01b03831660009081526002602052604090205460ff166107df5760405162461bcd60e51b815260206004820152600f60248201526e3737ba1030902932b3b4b9ba3932b960891b604482015260640161034c565b60005b8181101561091757836001600160a01b03166008828154811061081557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561090557600861083d60018461115d565b8154811061085b57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600880546001600160a01b03909216918390811061089557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060088054806108e257634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190555b8061090f81611174565b9150506107e2565b506040516001600160a01b038416907f81cb97a294b3ff5f91ef4048b3173c7f8f6943d9750add2071199061165e5f5790600090a2505b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b610981611007565b61098b6000611061565b565b3360009081526001602052604090205460ff16806109b557506000546001600160a01b031633145b6109d15760405162461bcd60e51b815260040161034c90611140565b8015610ab7576001600160a01b03821660009081526003602052604090205460ff1615610a345760405162461bcd60e51b8152602060048201526011602482015270616c726561647920616e206f7261636c6560781b604482015260640161034c565b6040516001600160a01b038316907e47706786c922d17b39285dc59d696bafea72c0b003d3841ae1202076f4c2e490600090a2600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b038416179055610c81565b6001600160a01b03821660009081526003602052604090205460ff16610b0f5760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f7261636c6560981b604482015260640161034c565b60075460005b81811015610c4a57836001600160a01b031660078281548110610b4857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610c38576007610b7060018461115d565b81548110610b8e57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600780546001600160a01b039092169183908110610bc857634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480610c1557634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190555b80610c4281611174565b915050610b15565b506040516001600160a01b038416907f9c8e7d83025bef8a04c664b2f753f64b8814bdb7e27291d7e50935f18cc3c71290600090a2505b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b610cb4611007565b8015610d9a576001600160a01b03821660009081526001602052604090205460ff1615610d165760405162461bcd60e51b815260206004820152601060248201526f30b63932b0b23c9030b71030b236b4b760811b604482015260640161034c565b6040516001600160a01b038316907f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990600090a2600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038416179055610f63565b6001600160a01b03821660009081526001602052604090205460ff16610df15760405162461bcd60e51b815260206004820152600c60248201526b3737ba1030b71030b236b4b760a11b604482015260640161034c565b60065460005b81811015610f2c57836001600160a01b031660068281548110610e2a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610f1a576006610e5260018461115d565b81548110610e7057634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600680546001600160a01b039092169183908110610eaa57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480610ef757634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b03191690550190555b80610f2481611174565b915050610df7565b506040516001600160a01b038416907fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90600090a2505b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b610f96611007565b6001600160a01b038116610ffb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034c565b61100481611061565b50565b6000546001600160a01b0316331461098b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146110c857600080fd5b919050565b6000602082840312156110de578081fd5b6110e7826110b1565b9392505050565b60008060408385031215611100578081fd5b611109836110b1565b91506020830135801515811461111d578182fd5b809150509250929050565b600060208284031215611139578081fd5b5035919050565b602080825260039082015262555f4160e81b604082015260600190565b60008282101561116f5761116f61118f565b500390565b60006000198214156111885761118861118f565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205488829a648d4552ce6983bc0866fd6470eb37d1d4d0a2e889b81d8ce1fa1a5d64736f6c63430008020033";

type ControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Controller__factory extends ContractFactory {
  constructor(...args: ControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  override connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
